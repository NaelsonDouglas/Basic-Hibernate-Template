
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test001"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    // The following exception was thrown during execution in test generation
    try {
    boolean b6 = treeset_b0.remove((java.lang.Object)10.0d);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test002"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b6 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test003"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Boolean> arraylist_b11 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b11, b_array13);
    java.lang.Object[] obj_array18 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array19 = arraylist_b11.toArray(obj_array18);
    // The following exception was thrown during execution in test generation
    try {
    boolean b20 = treeset_b0.contains((java.lang.Object)obj_array19);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test004"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test005"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b19 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + true+ "'", b19.equals(true));

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test006"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    int i1 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test007"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array7 = new java.util.ArrayList<java.lang.Object[]>();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array10);
    boolean b13 = treeset_b8.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array14 = treeset_b8.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b15 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b15, b_array17);
    java.lang.Object[] obj_array22 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array23 = arraylist_b15.toArray(obj_array22);
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] { obj_array14, obj_array23 };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array7, obj_array_array24);
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array7);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test008"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b15 = treeset_b7.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test009"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array14 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array14);
    boolean b16 = treeset_b7.removeAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b17.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b25 = treeset_b17.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj29 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj29);
    java.lang.Boolean b32 = treeset_b30.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { true };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array35);
    boolean b38 = treeset_b33.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array39 = treeset_b33.toArray();
    java.lang.Object[] obj_array40 = treeset_b30.toArray(obj_array39);
    java.lang.Object[] obj_array41 = treeset_b17.toArray(obj_array39);
    // The following exception was thrown during execution in test generation
    try {
    boolean b42 = treeset_b7.remove((java.lang.Object)obj_array41);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b25 + "' != '" + true+ "'", b25.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test010"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test011"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object obj7 = new java.lang.Object();
    // The following exception was thrown during execution in test generation
    try {
    boolean b8 = treeset_b0.contains(obj7);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test012"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test013"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b3 = treeset_b1.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b1.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test014"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b3 = treeset_b1.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b5 = treeset_b1.ceiling((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b1.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test015"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b7 = treeset_b6.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test016"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b21 = treeset_b13.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.tailSet((java.lang.Boolean)true, false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = treeset_b0.contains((java.lang.Object)treeset_b13);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test017"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.util.TreeSet<java.lang.Boolean> treeset_b2 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b2, b_array4);
    boolean b7 = treeset_b2.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b2.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.String str13 = treeset_b2.toString();
    java.lang.Boolean b15 = treeset_b2.higher((java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_b1.contains((java.lang.Object)treeset_b2);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[true]"+ "'", str13.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test018"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    treeset_b6.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test019"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b20 = treeset_b0.equals((java.lang.Object)0L);
    java.lang.Boolean b21 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test020"); }


    java.util.LinkedHashSet<java.lang.Boolean> linkedhashset_b0 = new java.util.LinkedHashSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)linkedhashset_b0, b_array2);
    java.util.TreeSet<java.lang.Boolean> treeset_b4 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array6 = new java.lang.Boolean[] { false };
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b4, b_array6);
    java.util.Comparator<java.lang.Object> comparator_obj8 = treeset_b4.comparator();
    java.lang.Boolean b10 = treeset_b4.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b4);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b11.headSet((java.lang.Boolean)false);
    boolean b14 = linkedhashset_b0.equals((java.lang.Object)sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test021"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    boolean b11 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test022"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.lang.Object obj7 = treeset_b0.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b9 = treeset_b0.contains((java.lang.Object)' ');
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test023"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b1.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b1);
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { false, true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b6, b_array9);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b6.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj13 = treeset_b6.comparator();
    java.lang.Object obj14 = treeset_b6.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = treeset_b5.remove(obj14);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test024"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Object obj7 = treeset_b0.clone();
    java.lang.Boolean b8 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test025"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b7.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test026"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b12 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test027"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.util.ArrayList<java.lang.Boolean> arraylist_b13 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b13, b_array15);
    java.lang.Object[] obj_array20 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array21 = arraylist_b13.toArray(obj_array20);
    java.lang.Object[] obj_array22 = arraylist_b13.toArray();
    // The following exception was thrown during execution in test generation
    try {
    boolean b23 = treeset_b7.contains((java.lang.Object)obj_array22);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test028"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.lang.String str4 = treeset_b1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[]"+ "'", str4.equals("[]"));

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test029"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b10.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array18 = treeset_b10.toArray();
    java.lang.Object[] obj_array19 = treeset_b0.toArray(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test030"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.String str19 = treeset_b0.toString();
    boolean b20 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true]"+ "'", str19.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test031"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.descendingIterator();
    treeset_b0.clear();
    java.lang.Boolean b8 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test032"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.String str19 = treeset_b0.toString();
    java.lang.Boolean b20 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true]"+ "'", str19.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + true+ "'", b20.equals(true));

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test033"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.String str19 = treeset_b0.toString();
    java.lang.Boolean b20 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true]"+ "'", str19.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + true+ "'", b20.equals(true));

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test034"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b11);
    boolean b14 = treeset_b12.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test035"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array11 = new java.lang.Long[] { (-1L), 0L };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array11);
    boolean b13 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.lang.String str14 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b15.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b21);
    boolean b24 = treeset_b22.remove((java.lang.Object)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b25.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b31);
    boolean b34 = treeset_b32.remove((java.lang.Object)false);
    java.lang.Boolean b36 = treeset_b32.lower((java.lang.Boolean)false);
    java.lang.Boolean b38 = treeset_b32.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b32.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b32.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long44 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array50 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long44, long_array50);
    boolean b52 = treeset_b32.removeAll((java.util.Collection<java.lang.Long>)arraylist_long44);
    boolean b53 = treeset_b22.removeAll((java.util.Collection<java.lang.Long>)arraylist_long44);
    boolean b54 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test036"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj16 = treeset_b7.comparator();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b7.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)false, true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj16);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test037"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.descendingSet();
    java.lang.Boolean b22 = treeset_b0.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test038"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.lang.Object obj7 = treeset_b0.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b9 = treeset_b0.contains((java.lang.Object)'a');
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test039"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { false };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b13.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b13.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b22 = treeset_b13.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b13.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array27);
    treeset_b25.clear();
    boolean b31 = treeset_b25.contains((java.lang.Object)(byte)100);
    boolean b32 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25);
    boolean b33 = treeset_b7.contains((java.lang.Object)b32);
    java.lang.Boolean b34 = treeset_b7.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b37 = treeset_b7.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b34 + "' != '" + true+ "'", b34.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b37);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test040"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    boolean b21 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test041"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test042"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b25);
    java.util.Iterator<java.lang.Boolean> iterator_b27 = treeset_b26.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b27);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test043"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { true };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array7);
    boolean b10 = treeset_b5.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array11 = treeset_b5.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b12 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b12, b_array14);
    java.lang.Object[] obj_array19 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array20 = arraylist_b12.toArray(obj_array19);
    boolean b21 = treeset_b5.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b12);
    java.lang.Boolean b23 = treeset_b5.ceiling((java.lang.Boolean)false);
    boolean b24 = treeset_b5.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b5.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = treeset_b0.contains((java.lang.Object)treeset_b5);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + true+ "'", b23.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test044"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Object[] obj_array2 = treeset_b1.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array2);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test045"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.lang.Boolean b21 = treeset_b0.higher((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + true+ "'", b23.equals(true));

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test046"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.lang.Boolean b27 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.floor((java.lang.Boolean)true);
    boolean b30 = treeset_b0.contains((java.lang.Object)b29);
    java.util.Comparator<java.lang.Object> comparator_obj31 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj31);
    java.util.SortedSet<java.lang.Boolean> sortedset_b34 = treeset_b32.tailSet((java.lang.Boolean)true);
    boolean b35 = treeset_b0.remove((java.lang.Object)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b38 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + false+ "'", b29.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b38);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test047"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b9.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b9.descendingSet();
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array12 = new java.util.ArrayList<java.lang.Object[]>();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b21 = treeset_b13.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj25 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj25);
    java.lang.Boolean b28 = treeset_b26.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array31);
    boolean b34 = treeset_b29.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array35 = treeset_b29.toArray();
    java.lang.Object[] obj_array36 = treeset_b26.toArray(obj_array35);
    java.lang.Object[] obj_array37 = treeset_b13.toArray(obj_array35);
    java.lang.Object[][] obj_array_array38 = new java.lang.Object[][] { obj_array35 };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array12, obj_array_array38);
    // The following exception was thrown during execution in test generation
    try {
    boolean b40 = treeset_b9.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test048"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Object obj7 = treeset_b0.clone();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test049"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Object obj10 = treeset_b7.clone();
    java.lang.Boolean b12 = treeset_b7.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test050"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long9 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array13 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long9, long_array13);
    boolean b15 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long9);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)false, true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test051"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    treeset_b0.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b9 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test052"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.lang.Boolean b23 = treeset_b0.higher((java.lang.Boolean)true);
    java.lang.Object obj24 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test053"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b3 = treeset_b1.tailSet((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b4 = treeset_b1.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b4);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test054"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test055"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Boolean b11 = treeset_b0.first();
    boolean b12 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + true+ "'", b11.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test056"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b4 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array6 = new java.lang.Boolean[] { true };
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b4, b_array6);
    boolean b9 = treeset_b4.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array10 = treeset_b4.toArray();
    java.lang.Object[] obj_array11 = treeset_b1.toArray(obj_array10);
    java.lang.Object obj12 = null;
    boolean b13 = treeset_b1.equals(obj12);
    int i14 = treeset_b1.size();
    treeset_b1.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test057"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b7.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b7);
    java.lang.Boolean b14 = treeset_b7.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test058"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Object[] obj_array9 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test059"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.String str8 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[false]"+ "'", str8.equals("[false]"));

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test060"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b17 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test061"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    treeset_b12.clear();
    boolean b18 = treeset_b12.contains((java.lang.Object)(byte)100);
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array24);
    boolean b27 = treeset_b22.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array28 = treeset_b22.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b29 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b29, b_array31);
    java.lang.Object[] obj_array36 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array37 = arraylist_b29.toArray(obj_array36);
    boolean b38 = treeset_b22.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b29);
    java.lang.Boolean b40 = treeset_b22.ceiling((java.lang.Boolean)false);
    boolean b41 = treeset_b22.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b22.headSet((java.lang.Boolean)true);
    boolean b44 = treeset_b12.remove((java.lang.Object)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b40 + "' != '" + true+ "'", b40.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test062"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.lang.Object obj9 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b10 = treeset_b0.remove(obj9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test063"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.lang.Boolean b5 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array9 = new java.util.ArrayList<java.lang.Object[]>();
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.lang.Boolean b16 = treeset_b10.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b10);
    int i18 = treeset_b10.size();
    java.lang.Object[] obj_array19 = treeset_b10.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { false };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array22);
    java.util.Comparator<java.lang.Object> comparator_obj24 = treeset_b20.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b20.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b29 = treeset_b20.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { false };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array32);
    java.util.Comparator<java.lang.Object> comparator_obj34 = treeset_b30.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array38 = treeset_b30.toArray();
    java.lang.Object[] obj_array39 = treeset_b20.toArray(obj_array38);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { false };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array42);
    java.util.Comparator<java.lang.Object> comparator_obj44 = treeset_b40.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b40.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array48 = treeset_b40.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { false };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array51);
    java.util.Comparator<java.lang.Object> comparator_obj53 = treeset_b49.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b56 = treeset_b49.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array57 = treeset_b49.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b49);
    java.util.Iterator<java.lang.Boolean> iterator_b59 = treeset_b58.iterator();
    boolean b61 = treeset_b58.add((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj62 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b63 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj62);
    java.lang.Boolean b65 = treeset_b63.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b66 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array68 = new java.lang.Boolean[] { true };
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b66, b_array68);
    boolean b71 = treeset_b66.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array72 = treeset_b66.toArray();
    java.lang.Object[] obj_array73 = treeset_b63.toArray(obj_array72);
    java.lang.Object[] obj_array74 = treeset_b58.toArray(obj_array73);
    java.util.TreeSet<java.lang.Boolean> treeset_b75 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array77 = new java.lang.Boolean[] { false };
    boolean b78 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b75, b_array77);
    java.util.Comparator<java.lang.Object> comparator_obj79 = treeset_b75.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b82 = treeset_b75.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b84 = treeset_b75.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b86 = treeset_b75.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b87 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array89 = new java.lang.Boolean[] { true };
    boolean b90 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b87, b_array89);
    java.lang.Object[] obj_array94 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array95 = arraylist_b87.toArray(obj_array94);
    java.lang.Object[] obj_array96 = treeset_b75.toArray(obj_array95);
    java.lang.Object[][] obj_array_array97 = new java.lang.Object[][] { obj_array19, obj_array38, obj_array48, obj_array73, obj_array96 };
    boolean b98 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array9, obj_array_array97);
    // The following exception was thrown during execution in test generation
    try {
    boolean b99 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array9);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + false+ "'", b16.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array94);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array95);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array96);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array97);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b98 == true);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test064"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test065"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test066"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test067"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array11 = new java.lang.Long[] { (-1L), 0L };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array11);
    boolean b13 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.lang.String str14 = treeset_b0.toString();
    java.lang.Boolean b15 = treeset_b0.pollLast();
    java.lang.Boolean b16 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test068"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    boolean b6 = treeset_b0.contains((java.lang.Object)(byte)100);
    boolean b8 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test069"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.Comparator<java.lang.Object> comparator_obj8 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj8);
    java.lang.Boolean b11 = treeset_b9.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b9.descendingSet();
    boolean b13 = treeset_b9.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b9.descendingSet();
    java.lang.Object obj15 = treeset_b9.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_b0.remove(obj15);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test070"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b5 = treeset_b1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test071"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b25);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b26.tailSet((java.lang.Boolean)true, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b26.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test072"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.lang.Object obj21 = treeset_b0.clone();
    java.lang.Boolean b22 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test073"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    int i8 = treeset_b0.size();
    boolean b9 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test074"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.String str19 = treeset_b0.toString();
    java.lang.Boolean b21 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true]"+ "'", str19.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test075"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    java.lang.Object obj7 = treeset_b1.clone();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b8 = treeset_b1.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test076"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b11);
    java.lang.Boolean b14 = treeset_b12.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test077"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    treeset_b12.clear();
    boolean b18 = treeset_b12.contains((java.lang.Object)(byte)100);
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.ArrayList<java.lang.Boolean> arraylist_b20 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b20, b_array22);
    java.lang.Object[] obj_array27 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array28 = arraylist_b20.toArray(obj_array27);
    java.lang.Object[] obj_array29 = treeset_b0.toArray(obj_array27);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test078"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array8 = new java.lang.Boolean[] { true, true };
    boolean b9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array8);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b5.tailSet((java.lang.Boolean)false);
    java.lang.Object[] obj_array12 = treeset_b5.toArray();
    // The following exception was thrown during execution in test generation
    try {
    boolean b13 = treeset_b1.contains((java.lang.Object)obj_array12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test079"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.lang.Boolean b21 = treeset_b0.higher((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b0.pollFirst();
    int i23 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array26);
    boolean b29 = treeset_b24.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b34 = treeset_b24.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj35 = treeset_b24.clone();
    java.lang.Boolean b37 = treeset_b24.floor((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b39 = treeset_b24.tailSet((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b40 = treeset_b0.contains((java.lang.Object)treeset_b24);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b39);

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test080"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    treeset_b1.clear();
    java.util.Comparator<java.lang.Object> comparator_obj6 = treeset_b1.comparator();
    java.lang.Boolean b8 = treeset_b1.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test081"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b7.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b13);
    java.util.ArrayList<java.lang.Long> arraylist_long15 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array21 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long15, long_array21);
    boolean b23 = treeset_b14.removeAll((java.util.Collection<java.lang.Long>)arraylist_long15);
    boolean b24 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long15);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.util.Comparator<java.lang.Object> comparator_obj28 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj28);
    java.lang.Boolean b31 = treeset_b29.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b32, b_array34);
    boolean b37 = treeset_b32.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array38 = treeset_b32.toArray();
    java.lang.Object[] obj_array39 = treeset_b29.toArray(obj_array38);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { false };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array42);
    java.lang.Boolean b45 = treeset_b40.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b46 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { false };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b46, b_array48);
    java.util.Comparator<java.lang.Object> comparator_obj50 = treeset_b46.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b46.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b55 = treeset_b46.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b46.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b58 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b58, b_array60);
    java.lang.Object[] obj_array65 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array66 = arraylist_b58.toArray(obj_array65);
    java.lang.Object[] obj_array67 = treeset_b46.toArray(obj_array66);
    java.lang.Object[] obj_array68 = treeset_b40.toArray(obj_array66);
    java.util.TreeSet<java.lang.Boolean> treeset_b69 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array71 = new java.lang.Boolean[] { true };
    boolean b72 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b69, b_array71);
    treeset_b69.clear();
    java.lang.String str74 = treeset_b69.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b75 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b69);
    java.lang.Boolean b77 = treeset_b69.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b79 = treeset_b69.ceiling((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj80 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b81 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj80);
    java.lang.Boolean b83 = treeset_b81.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b84 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array86 = new java.lang.Boolean[] { true };
    boolean b87 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b84, b_array86);
    boolean b89 = treeset_b84.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array90 = treeset_b84.toArray();
    java.lang.Object[] obj_array91 = treeset_b81.toArray(obj_array90);
    java.lang.Object[] obj_array92 = treeset_b69.toArray(obj_array91);
    java.lang.Object[][] obj_array_array93 = new java.lang.Object[][] { obj_array38, obj_array66, obj_array92 };
    boolean b94 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array93);
    // The following exception was thrown during execution in test generation
    try {
    boolean b95 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "[]"+ "'", str74.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array91);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == true);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test082"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b7.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b7);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b12.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test083"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b11 = treeset_b0.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test084"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.descendingSet();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test085"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b9.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test086"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    java.lang.Boolean b8 = treeset_b7.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test087"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Object[] obj_array13 = treeset_b0.toArray();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test088"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b57 = treeset_b51.headSet((java.lang.Boolean)false, false);
    treeset_b51.clear();
    java.lang.Boolean b60 = treeset_b51.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test089"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.lang.Boolean b8 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test090"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.lang.Boolean b19 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + true+ "'", b19.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + true+ "'", b23.equals(true));

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test091"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test092"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b50 = treeset_b0.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + true+ "'", b50.equals(true));

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test093"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj6 = treeset_b0.comparator();
    int i7 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test094"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { false };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array9);
    java.lang.Boolean b12 = treeset_b7.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_b6.remove((java.lang.Object)sortedset_b15);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test095"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    boolean b20 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array26);
    boolean b29 = treeset_b24.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array30 = treeset_b24.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b31 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31, b_array33);
    java.lang.Object[] obj_array38 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array39 = arraylist_b31.toArray(obj_array38);
    boolean b40 = treeset_b24.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31);
    java.lang.Boolean b42 = treeset_b24.ceiling((java.lang.Boolean)false);
    boolean b43 = treeset_b24.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b24.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { false };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array47);
    java.util.Comparator<java.lang.Object> comparator_obj49 = treeset_b45.comparator();
    java.lang.Boolean b51 = treeset_b45.lower((java.lang.Boolean)true);
    java.lang.Boolean b53 = treeset_b45.floor((java.lang.Boolean)true);
    boolean b54 = treeset_b24.contains((java.lang.Object)b53);
    boolean b55 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24);
    java.lang.Object obj56 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b42 + "' != '" + true+ "'", b42.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + false+ "'", b51.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b53 + "' != '" + false+ "'", b53.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj56);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test096"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    boolean b6 = treeset_b0.contains((java.lang.Object)(byte)100);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { false, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b7.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b14 = treeset_b7.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b15.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b23 = treeset_b15.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj27 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj27);
    java.lang.Boolean b30 = treeset_b28.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    boolean b36 = treeset_b31.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array37 = treeset_b31.toArray();
    java.lang.Object[] obj_array38 = treeset_b28.toArray(obj_array37);
    java.lang.Object[] obj_array39 = treeset_b15.toArray(obj_array37);
    java.lang.Object[] obj_array40 = treeset_b7.toArray(obj_array39);
    java.lang.Object[] obj_array41 = treeset_b0.toArray(obj_array39);
    java.lang.Object[] obj_array42 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + true+ "'", b23.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test097"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b4 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array6 = new java.lang.Boolean[] { true };
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b4, b_array6);
    boolean b9 = treeset_b4.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array10 = treeset_b4.toArray();
    java.lang.Object[] obj_array11 = treeset_b1.toArray(obj_array10);
    java.lang.Object obj12 = null;
    boolean b13 = treeset_b1.equals(obj12);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test098"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj20 = treeset_b13.comparator();
    java.lang.Object obj21 = treeset_b13.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b28);
    java.util.ArrayList<java.lang.Long> arraylist_long30 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array36 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long30, long_array36);
    boolean b38 = treeset_b29.removeAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    boolean b39 = treeset_b13.removeAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    boolean b40 = treeset_b12.retainAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b12.tailSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test099"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test100"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test101"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.tailSet((java.lang.Boolean)false, false);
    int i19 = treeset_b7.size();
    int i20 = treeset_b7.size();
    java.lang.String str21 = treeset_b7.toString();
    java.lang.Boolean b23 = treeset_b7.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[true]"+ "'", str21.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + true+ "'", b23.equals(true));

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test102"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.lang.Boolean b9 = treeset_b0.pollLast();
    java.lang.Boolean b11 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test103"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.lang.Boolean b5 = treeset_b0.higher((java.lang.Boolean)false);
    boolean b7 = treeset_b0.equals((java.lang.Object)(-1L));
    java.lang.Boolean b9 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    boolean b21 = treeset_b16.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array22 = treeset_b16.toArray();
    java.lang.Object[] obj_array23 = treeset_b13.toArray(obj_array22);
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = treeset_b0.remove((java.lang.Object)obj_array22);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test104"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b49 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b49);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test105"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj6 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj6);
    java.lang.Boolean b9 = treeset_b7.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj10 = treeset_b7.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b7);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b18);
    boolean b21 = treeset_b19.remove((java.lang.Object)false);
    java.lang.Boolean b23 = treeset_b19.lower((java.lang.Boolean)false);
    java.lang.Boolean b25 = treeset_b19.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b19.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long31 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array37 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long31, long_array37);
    boolean b39 = treeset_b19.removeAll((java.util.Collection<java.lang.Long>)arraylist_long31);
    boolean b40 = treeset_b11.retainAll((java.util.Collection<java.lang.Long>)arraylist_long31);
    boolean b41 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long31);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array44);
    boolean b47 = treeset_b42.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b50 = treeset_b42.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj51 = treeset_b42.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b42.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj54 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b55 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj54);
    java.lang.Boolean b57 = treeset_b55.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b58 = treeset_b55.descendingSet();
    boolean b59 = treeset_b42.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b58);
    java.util.TreeSet<java.lang.Boolean> treeset_b60 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array63 = new java.lang.Boolean[] { true, true };
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b60, b_array63);
    java.util.SortedSet<java.lang.Boolean> sortedset_b66 = treeset_b60.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b68 = treeset_b60.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b71 = treeset_b60.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj72 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b73 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj72);
    java.lang.Boolean b75 = treeset_b73.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b76 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array78 = new java.lang.Boolean[] { true };
    boolean b79 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b76, b_array78);
    boolean b81 = treeset_b76.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array82 = treeset_b76.toArray();
    java.lang.Object[] obj_array83 = treeset_b73.toArray(obj_array82);
    java.lang.Object[] obj_array84 = treeset_b60.toArray(obj_array82);
    java.lang.Object[] obj_array85 = treeset_b42.toArray(obj_array82);
    java.lang.Object[] obj_array86 = treeset_b0.toArray(obj_array85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b68 + "' != '" + true+ "'", b68.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array86);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test106"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    boolean b20 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array26);
    boolean b29 = treeset_b24.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array30 = treeset_b24.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b31 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31, b_array33);
    java.lang.Object[] obj_array38 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array39 = arraylist_b31.toArray(obj_array38);
    boolean b40 = treeset_b24.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31);
    java.lang.Boolean b42 = treeset_b24.ceiling((java.lang.Boolean)false);
    boolean b43 = treeset_b24.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b24.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { false };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array47);
    java.util.Comparator<java.lang.Object> comparator_obj49 = treeset_b45.comparator();
    java.lang.Boolean b51 = treeset_b45.lower((java.lang.Boolean)true);
    java.lang.Boolean b53 = treeset_b45.floor((java.lang.Boolean)true);
    boolean b54 = treeset_b24.contains((java.lang.Object)b53);
    boolean b55 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24);
    boolean b57 = treeset_b24.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b42 + "' != '" + true+ "'", b42.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + false+ "'", b51.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b53 + "' != '" + false+ "'", b53.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test107"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.headSet((java.lang.Boolean)true);
    treeset_b0.clear();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test108"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test109"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.Collection<java.lang.Object[]> collection_obj_array48 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b49 = treeset_b0.containsAll(collection_obj_array48);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test110"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.descendingIterator();
    int i11 = treeset_b0.size();
    java.lang.Boolean b13 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test111"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b4 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array6 = new java.lang.Boolean[] { true };
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b4, b_array6);
    boolean b9 = treeset_b4.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array10 = treeset_b4.toArray();
    java.lang.Object[] obj_array11 = treeset_b1.toArray(obj_array10);
    java.lang.Object obj12 = null;
    boolean b13 = treeset_b1.equals(obj12);
    java.lang.Object obj14 = treeset_b1.clone();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b15 = treeset_b1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test112"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.Iterator<java.lang.Boolean> iterator_b9 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test113"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    treeset_b51.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test114"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b14 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test115"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.descendingSet();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test116"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.lang.Object obj7 = treeset_b0.clone();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj10 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test117"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.lang.Boolean b27 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.floor((java.lang.Boolean)true);
    boolean b30 = treeset_b0.contains((java.lang.Object)b29);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { false };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    java.util.Comparator<java.lang.Object> comparator_obj35 = treeset_b31.comparator();
    java.lang.Boolean b37 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.floor((java.lang.Boolean)true);
    java.lang.Boolean b40 = treeset_b31.last();
    boolean b41 = treeset_b0.remove((java.lang.Object)b40);
    java.lang.Object obj42 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + false+ "'", b29.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + false+ "'", b37.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + false+ "'", b39.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b40 + "' != '" + false+ "'", b40.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj42);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test118"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b7.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b7);
    java.lang.Object[] obj_array13 = treeset_b7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test119"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    java.util.ArrayList<java.lang.Long> arraylist_long17 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array23 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long17, long_array23);
    boolean b25 = treeset_b16.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    boolean b26 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    int i27 = treeset_b0.size();
    boolean b29 = treeset_b0.add((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b30 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b30);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test120"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b0.lower((java.lang.Boolean)false);
    java.lang.String str10 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[false]"+ "'", str10.equals("[false]"));

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test121"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b19 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + true+ "'", b19.equals(true));

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test122"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b8.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b14);
    java.util.ArrayList<java.lang.Long> arraylist_long16 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array22 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long16, long_array22);
    boolean b24 = treeset_b15.removeAll((java.util.Collection<java.lang.Long>)arraylist_long16);
    boolean b25 = treeset_b0.remove((java.lang.Object)b24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b0.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test123"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b7.tailSet((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b7.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test124"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b24 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + true+ "'", b23.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b24 + "' != '" + true+ "'", b24.equals(true));

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test125"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    treeset_b7.clear();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b7.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test126"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b21 = treeset_b13.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.tailSet((java.lang.Boolean)true, false);
    int i25 = treeset_b13.size();
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b13.headSet((java.lang.Boolean)true);
    treeset_b13.clear();
    java.util.Comparator<java.lang.Object> comparator_obj30 = treeset_b13.comparator();
    boolean b31 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test127"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    boolean b6 = treeset_b0.contains((java.lang.Object)(byte)100);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { false, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b10.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b10.comparator();
    treeset_b10.clear();
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10);
    java.lang.Boolean b21 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test128"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test129"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    boolean b20 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array26);
    boolean b29 = treeset_b24.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array30 = treeset_b24.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b31 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31, b_array33);
    java.lang.Object[] obj_array38 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array39 = arraylist_b31.toArray(obj_array38);
    boolean b40 = treeset_b24.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31);
    java.lang.Boolean b42 = treeset_b24.ceiling((java.lang.Boolean)false);
    boolean b43 = treeset_b24.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b24.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { false };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array47);
    java.util.Comparator<java.lang.Object> comparator_obj49 = treeset_b45.comparator();
    java.lang.Boolean b51 = treeset_b45.lower((java.lang.Boolean)true);
    java.lang.Boolean b53 = treeset_b45.floor((java.lang.Boolean)true);
    boolean b54 = treeset_b24.contains((java.lang.Object)b53);
    boolean b55 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24);
    java.util.TreeSet<java.lang.Boolean> treeset_b56 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array58 = new java.lang.Boolean[] { true };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b56, b_array58);
    treeset_b56.clear();
    java.lang.String str61 = treeset_b56.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b56);
    int i63 = treeset_b62.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b68 = treeset_b62.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b69 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array72 = new java.lang.Boolean[] { true, true };
    boolean b73 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b69, b_array72);
    java.util.SortedSet<java.lang.Boolean> sortedset_b75 = treeset_b69.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b76 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b75);
    boolean b78 = treeset_b76.remove((java.lang.Object)false);
    java.lang.Boolean b80 = treeset_b76.lower((java.lang.Boolean)false);
    java.lang.Boolean b82 = treeset_b76.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b84 = treeset_b76.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b87 = treeset_b76.tailSet((java.lang.Boolean)false, false);
    boolean b88 = treeset_b62.remove((java.lang.Object)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b89 = treeset_b0.remove((java.lang.Object)treeset_b62);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b42 + "' != '" + true+ "'", b42.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + false+ "'", b51.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b53 + "' != '" + false+ "'", b53.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "[]"+ "'", str61.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test130"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test131"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.lang.Boolean b16 = treeset_b10.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b17.headSet((java.lang.Boolean)false);
    boolean b20 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.descendingSet();
    java.util.Iterator<java.lang.Boolean> iterator_b22 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + false+ "'", b16.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b22);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test132"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Boolean b11 = treeset_b0.first();
    java.lang.Boolean b12 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + true+ "'", b11.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test133"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Object obj48 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj48);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test134"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.iterator();
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + true+ "'", b13.equals(true));

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test135"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test136"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b1.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b1);
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true, true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b6, b_array9);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b6.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b12);
    boolean b15 = treeset_b13.remove((java.lang.Object)false);
    java.lang.Boolean b17 = treeset_b13.lower((java.lang.Boolean)false);
    java.lang.Boolean b19 = treeset_b13.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long25 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array31 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long25, long_array31);
    boolean b33 = treeset_b13.removeAll((java.util.Collection<java.lang.Long>)arraylist_long25);
    boolean b34 = treeset_b5.retainAll((java.util.Collection<java.lang.Long>)arraylist_long25);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b37 = treeset_b5.headSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b37);

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test137"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    boolean b9 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test138"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b0.pollFirst();
    int i12 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test139"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test140"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.descendingIterator();
    int i11 = treeset_b0.size();
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test141"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.Object obj14 = treeset_b0.clone();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    java.lang.Boolean b20 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + true+ "'", b20.equals(true));

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test142"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    java.lang.Boolean b9 = treeset_b7.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test143"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array11 = new java.lang.Long[] { (-1L), 0L };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array11);
    boolean b13 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.Comparator<java.lang.Object> comparator_obj18 = treeset_b14.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b14.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b23 = treeset_b14.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b14.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b26 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b26, b_array28);
    java.lang.Object[] obj_array33 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array34 = arraylist_b26.toArray(obj_array33);
    java.lang.Object[] obj_array35 = treeset_b14.toArray(obj_array34);
    java.lang.Boolean b36 = treeset_b14.first();
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    boolean b42 = treeset_b37.add((java.lang.Boolean)true);
    treeset_b37.clear();
    boolean b44 = treeset_b14.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37);
    // The following exception was thrown during execution in test generation
    try {
    boolean b45 = treeset_b0.contains((java.lang.Object)treeset_b14);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b36 + "' != '" + false+ "'", b36.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test144"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Boolean b12 = treeset_b0.pollFirst();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.headSet((java.lang.Boolean)true, true);
    java.util.Iterator<java.lang.Boolean> iterator_b16 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b16);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test145"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b0.headSet((java.lang.Boolean)true);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test146"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    treeset_b7.clear();
    java.lang.Boolean b12 = treeset_b7.ceiling((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj13 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj13);
    java.lang.Boolean b16 = treeset_b14.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array19);
    boolean b22 = treeset_b17.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array23 = treeset_b17.toArray();
    java.lang.Object[] obj_array24 = treeset_b14.toArray(obj_array23);
    java.lang.Object obj25 = null;
    boolean b26 = treeset_b14.equals(obj25);
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = treeset_b7.remove((java.lang.Object)treeset_b14);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test147"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    boolean b7 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test148"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    treeset_b12.clear();
    boolean b18 = treeset_b12.contains((java.lang.Object)(byte)100);
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.ArrayList<java.lang.Boolean> arraylist_b20 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b20, b_array22);
    java.lang.Object[] obj_array27 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array28 = arraylist_b20.toArray(obj_array27);
    java.lang.Object[] obj_array29 = treeset_b0.toArray(obj_array27);
    java.util.Iterator<java.lang.Boolean> iterator_b30 = treeset_b0.descendingIterator();
    java.util.Comparator<java.lang.Object> comparator_obj31 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj31);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test149"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    java.util.ArrayList<java.lang.Long> arraylist_long17 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array23 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long17, long_array23);
    boolean b25 = treeset_b16.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    boolean b26 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    int i27 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b32 = treeset_b0.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b32 + "' != '" + false+ "'", b32.equals(false));

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test150"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.tailSet((java.lang.Boolean)false, false);
    int i19 = treeset_b7.size();
    int i20 = treeset_b7.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    boolean b26 = treeset_b21.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array27 = treeset_b21.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b28 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28, b_array30);
    java.lang.Object[] obj_array35 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array36 = arraylist_b28.toArray(obj_array35);
    boolean b37 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28);
    java.lang.Boolean b39 = treeset_b21.ceiling((java.lang.Boolean)false);
    java.lang.String str40 = treeset_b21.toString();
    java.lang.Boolean b42 = treeset_b21.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array45);
    boolean b48 = treeset_b43.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b43.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long52 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array56 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long52, long_array56);
    boolean b58 = treeset_b43.removeAll((java.util.Collection<java.lang.Long>)arraylist_long52);
    boolean b59 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long52);
    boolean b60 = treeset_b7.removeAll((java.util.Collection<java.lang.Long>)arraylist_long52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[true]"+ "'", str40.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test151"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.higher((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b13.tailSet((java.lang.Boolean)true);
    boolean b16 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    boolean b17 = treeset_b7.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + true+ "'", b11.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test152"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.lang.Object obj7 = treeset_b0.clone();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i10 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test153"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    java.util.ArrayList<java.lang.Long> arraylist_long17 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array23 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long17, long_array23);
    boolean b25 = treeset_b16.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    boolean b26 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    int i27 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b31.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b38.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b44);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array52);
    boolean b54 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b31.retainAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b56 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    java.lang.Boolean b57 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b58, b_array60);
    treeset_b58.clear();
    java.lang.String str63 = treeset_b58.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b64 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b58);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b69 = treeset_b58.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b71 = treeset_b58.headSet((java.lang.Boolean)true);
    boolean b72 = treeset_b0.remove((java.lang.Object)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "[]"+ "'", str63.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test154"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj20 = treeset_b13.comparator();
    java.lang.Object obj21 = treeset_b13.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b28);
    java.util.ArrayList<java.lang.Long> arraylist_long30 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array36 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long30, long_array36);
    boolean b38 = treeset_b29.removeAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    boolean b39 = treeset_b13.removeAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    boolean b40 = treeset_b12.retainAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b41 = treeset_b12.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test155"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.lang.Boolean b6 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array9);
    boolean b12 = treeset_b7.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array13 = treeset_b7.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b14.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b20);
    java.util.ArrayList<java.lang.Long> arraylist_long22 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array28 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long22, long_array28);
    boolean b30 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    boolean b31 = treeset_b7.retainAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    boolean b32 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    java.lang.Object obj33 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj33);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test156"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test157"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    treeset_b1.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test158"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    treeset_b0.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b9 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test159"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    treeset_b7.clear();
    java.lang.Boolean b12 = treeset_b7.ceiling((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test160"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    boolean b6 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test161"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test162"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test163"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)false);
    java.lang.Object obj11 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test164"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    boolean b6 = treeset_b0.contains((java.lang.Object)(byte)100);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.lang.Boolean b11 = treeset_b0.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test165"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test166"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.lang.String str6 = treeset_b1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[]"+ "'", str6.equals("[]"));

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test167"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b3 = treeset_b1.tailSet((java.lang.Boolean)true);
    int i4 = treeset_b1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test168"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    boolean b21 = treeset_b16.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array22 = treeset_b16.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b23 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b23, b_array25);
    java.lang.Object[] obj_array30 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array31 = arraylist_b23.toArray(obj_array30);
    boolean b32 = treeset_b16.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b23);
    java.lang.Boolean b34 = treeset_b16.ceiling((java.lang.Boolean)false);
    boolean b35 = treeset_b16.isEmpty();
    boolean b36 = treeset_b16.isEmpty();
    boolean b37 = treeset_b0.remove((java.lang.Object)b36);
    java.util.SortedSet<java.lang.Boolean> sortedset_b39 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b34 + "' != '" + true+ "'", b34.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b39);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test169"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.lang.Object obj21 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b30 = treeset_b22.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b22.tailSet((java.lang.Boolean)true, false);
    int i34 = treeset_b22.size();
    treeset_b22.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b22.headSet((java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    boolean b38 = treeset_b0.contains((java.lang.Object)treeset_b22);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test170"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array11 = new java.lang.Long[] { (-1L), 0L };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array11);
    boolean b13 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.lang.String str14 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object[] obj_array16 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test171"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    boolean b21 = treeset_b16.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array22 = treeset_b16.toArray();
    java.lang.Object[] obj_array23 = treeset_b13.toArray(obj_array22);
    java.lang.Object[] obj_array24 = treeset_b0.toArray(obj_array22);
    java.lang.Boolean b25 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b25 + "' != '" + true+ "'", b25.equals(true));

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test172"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    boolean b9 = treeset_b0.isEmpty();
    java.util.Comparator<java.lang.Object> comparator_obj10 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj10);
    java.lang.Boolean b13 = treeset_b11.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    boolean b19 = treeset_b14.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array20 = treeset_b14.toArray();
    java.lang.Object[] obj_array21 = treeset_b11.toArray(obj_array20);
    java.lang.Object obj22 = null;
    boolean b23 = treeset_b11.equals(obj22);
    java.lang.Object obj24 = treeset_b11.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { false };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array27);
    java.util.Comparator<java.lang.Object> comparator_obj29 = treeset_b25.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b32 = treeset_b25.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b34 = treeset_b25.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b25.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    treeset_b37.clear();
    boolean b43 = treeset_b37.contains((java.lang.Object)(byte)100);
    boolean b44 = treeset_b25.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37);
    java.util.ArrayList<java.lang.Boolean> arraylist_b45 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { true };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b45, b_array47);
    java.lang.Object[] obj_array52 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array53 = arraylist_b45.toArray(obj_array52);
    java.lang.Object[] obj_array54 = treeset_b25.toArray(obj_array52);
    java.lang.Object[] obj_array55 = treeset_b11.toArray(obj_array52);
    java.lang.Object[] obj_array56 = treeset_b0.toArray(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test173"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b0.lower((java.lang.Boolean)false);
    java.lang.Boolean b10 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test174"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    treeset_b0.clear();
    java.util.Comparator<java.lang.Object> comparator_obj9 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj9);
    java.lang.Boolean b12 = treeset_b10.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj13 = treeset_b10.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b10);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b15.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b21);
    boolean b24 = treeset_b22.remove((java.lang.Object)false);
    java.lang.Boolean b26 = treeset_b22.lower((java.lang.Boolean)false);
    java.lang.Boolean b28 = treeset_b22.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b22.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b22.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long34 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array40 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long34, long_array40);
    boolean b42 = treeset_b22.removeAll((java.util.Collection<java.lang.Long>)arraylist_long34);
    boolean b43 = treeset_b14.retainAll((java.util.Collection<java.lang.Long>)arraylist_long34);
    boolean b44 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test175"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { false, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b8.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b8.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long16 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array19 = new java.lang.Long[] { (-1L), 0L };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long16, long_array19);
    boolean b21 = treeset_b8.retainAll((java.util.Collection<java.lang.Long>)arraylist_long16);
    java.lang.String str22 = treeset_b8.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b8);
    boolean b24 = treeset_b0.equals((java.lang.Object)treeset_b23);
    java.lang.Boolean b25 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test176"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    int i7 = treeset_b6.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { false };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array10);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b8.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b8.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b17 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b8.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b19);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj28 = treeset_b21.comparator();
    java.lang.Object obj29 = treeset_b21.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b30.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b36);
    java.util.ArrayList<java.lang.Long> arraylist_long38 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array44 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long38, long_array44);
    boolean b46 = treeset_b37.removeAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    boolean b47 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    boolean b48 = treeset_b20.retainAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    boolean b49 = treeset_b6.retainAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    java.lang.String str50 = treeset_b6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "[]"+ "'", str50.equals("[]"));

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test177"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b4 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { false, true };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b4, b_array7);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b4.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj11 = treeset_b4.comparator();
    java.lang.Object obj12 = treeset_b4.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b13 = treeset_b1.remove(obj12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test178"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test179"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { false };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array7);
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b5.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b5.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array13 = treeset_b5.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b5);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b14.iterator();
    boolean b16 = treeset_b0.equals((java.lang.Object)treeset_b14);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b14.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test180"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.lang.Boolean b10 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test181"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    boolean b8 = treeset_b1.add((java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b1.pollLast();
    java.lang.Boolean b11 = treeset_b1.ceiling((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b1.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test182"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b9.iterator();
    boolean b12 = treeset_b9.add((java.lang.Boolean)true);
    treeset_b9.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    boolean b19 = treeset_b14.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array20 = treeset_b14.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b21 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b21, b_array23);
    java.lang.Object[] obj_array28 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array29 = arraylist_b21.toArray(obj_array28);
    boolean b30 = treeset_b14.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b21);
    java.lang.Boolean b32 = treeset_b14.ceiling((java.lang.Boolean)false);
    boolean b33 = treeset_b14.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b14.headSet((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b14.descendingIterator();
    boolean b37 = treeset_b9.equals((java.lang.Object)treeset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b32 + "' != '" + true+ "'", b32.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test183"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b8.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b14);
    java.util.ArrayList<java.lang.Long> arraylist_long16 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array22 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long16, long_array22);
    boolean b24 = treeset_b15.removeAll((java.util.Collection<java.lang.Long>)arraylist_long16);
    boolean b25 = treeset_b0.remove((java.lang.Object)b24);
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b26, b_array28);
    treeset_b26.clear();
    java.lang.String str31 = treeset_b26.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b26);
    java.util.Iterator<java.lang.Boolean> iterator_b33 = treeset_b26.iterator();
    boolean b35 = treeset_b26.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array36 = treeset_b26.toArray();
    java.lang.Object[] obj_array37 = treeset_b0.toArray(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[]"+ "'", str31.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test184"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    boolean b20 = treeset_b0.isEmpty();
    java.lang.Boolean b22 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test185"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Object[] obj_array7 = treeset_b0.toArray();
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test186"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    boolean b8 = treeset_b0.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b9 = treeset_b0.iterator();
    java.util.Comparator<java.lang.Object> comparator_obj10 = treeset_b0.comparator();
    java.lang.Boolean b11 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test187"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b8 = treeset_b7.pollLast();
    java.lang.Boolean b10 = treeset_b7.lower((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test188"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    java.lang.Object obj55 = treeset_b51.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj55);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test189"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    java.util.ArrayList<java.lang.Long> arraylist_long14 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array19 = new java.lang.Long[] { 10L, 10L, 10L, (-1L) };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long14, long_array19);
    boolean b21 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long14);
    java.lang.String str22 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test190"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    int i21 = treeset_b20.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test191"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test192"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.lang.Boolean b27 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.floor((java.lang.Boolean)true);
    boolean b30 = treeset_b0.contains((java.lang.Object)b29);
    java.util.Comparator<java.lang.Object> comparator_obj31 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj31);
    java.util.SortedSet<java.lang.Boolean> sortedset_b34 = treeset_b32.tailSet((java.lang.Boolean)true);
    boolean b35 = treeset_b0.remove((java.lang.Object)true);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + false+ "'", b29.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test193"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b9 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test194"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    boolean b8 = treeset_b1.add((java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b1.pollLast();
    java.lang.Boolean b11 = treeset_b1.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b1.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test195"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.lang.String str9 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b10.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b17.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b23);
    java.util.ArrayList<java.lang.Long> arraylist_long25 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array31 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long25, long_array31);
    boolean b33 = treeset_b24.removeAll((java.util.Collection<java.lang.Long>)arraylist_long25);
    boolean b34 = treeset_b10.retainAll((java.util.Collection<java.lang.Long>)arraylist_long25);
    boolean b35 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[false]"+ "'", str9.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test196"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b49 = treeset_b48.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test197"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.lang.Boolean b5 = treeset_b0.higher((java.lang.Boolean)false);
    boolean b7 = treeset_b0.equals((java.lang.Object)(-1L));
    java.lang.Boolean b9 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b21 = treeset_b13.ceiling((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b22 = treeset_b13.iterator();
    boolean b23 = treeset_b0.equals((java.lang.Object)treeset_b13);
    java.lang.Object[] obj_array24 = treeset_b13.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test198"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { false, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b8.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b8.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long16 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array19 = new java.lang.Long[] { (-1L), 0L };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long16, long_array19);
    boolean b21 = treeset_b8.retainAll((java.util.Collection<java.lang.Long>)arraylist_long16);
    java.lang.String str22 = treeset_b8.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b8);
    boolean b24 = treeset_b0.equals((java.lang.Object)treeset_b23);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test199"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.lang.Boolean b13 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b17 = treeset_b0.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test200"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b5 = treeset_b1.tailSet((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b1.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test201"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { false };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array7);
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b5.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b5.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array13 = treeset_b5.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b5);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b14.iterator();
    boolean b16 = treeset_b0.equals((java.lang.Object)treeset_b14);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b14.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test202"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj6 = treeset_b0.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { false, false };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b7.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b15 = treeset_b7.first();
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b7.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7);
    java.lang.Boolean b20 = treeset_b7.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + false+ "'", b15.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + false+ "'", b20.equals(false));

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test203"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b11.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test204"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b57 = treeset_b51.headSet((java.lang.Boolean)false, false);
    treeset_b51.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array61 = new java.lang.Boolean[] { true };
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59, b_array61);
    treeset_b59.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b64 = treeset_b59.descendingIterator();
    java.lang.Object obj65 = treeset_b59.clone();
    boolean b66 = treeset_b51.equals((java.lang.Object)treeset_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test205"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Object[] obj_array13 = treeset_b0.toArray();
    int i14 = treeset_b0.size();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test206"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.lang.Boolean b6 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test207"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    boolean b15 = treeset_b10.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array16 = treeset_b10.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b17 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b17, b_array19);
    java.lang.Object[] obj_array24 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array25 = arraylist_b17.toArray(obj_array24);
    boolean b26 = treeset_b10.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b17);
    java.lang.Boolean b28 = treeset_b10.ceiling((java.lang.Boolean)false);
    java.lang.String str29 = treeset_b10.toString();
    java.lang.Boolean b31 = treeset_b10.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b32, b_array34);
    boolean b37 = treeset_b32.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b32.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long41 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array45 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long41, long_array45);
    boolean b47 = treeset_b32.removeAll((java.util.Collection<java.lang.Long>)arraylist_long41);
    boolean b48 = treeset_b10.retainAll((java.util.Collection<java.lang.Long>)arraylist_long41);
    boolean b49 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long41);
    java.lang.Object[] obj_array50 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "[true]"+ "'", str29.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array50);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test208"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Boolean b12 = treeset_b0.pollFirst();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b14 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test209"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.lang.Boolean b27 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.floor((java.lang.Boolean)true);
    boolean b30 = treeset_b0.contains((java.lang.Object)b29);
    java.util.Comparator<java.lang.Object> comparator_obj31 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj31);
    java.util.SortedSet<java.lang.Boolean> sortedset_b34 = treeset_b32.tailSet((java.lang.Boolean)true);
    boolean b35 = treeset_b0.remove((java.lang.Object)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + false+ "'", b29.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test210"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test211"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    int i8 = treeset_b0.size();
    java.lang.Object[] obj_array9 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b10.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj16 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj16);
    java.lang.Boolean b19 = treeset_b17.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj20 = treeset_b17.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b28);
    boolean b31 = treeset_b29.remove((java.lang.Object)false);
    java.lang.Boolean b33 = treeset_b29.lower((java.lang.Boolean)false);
    java.lang.Boolean b35 = treeset_b29.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b29.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b40 = treeset_b29.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long41 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array47 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long41, long_array47);
    boolean b49 = treeset_b29.removeAll((java.util.Collection<java.lang.Long>)arraylist_long41);
    boolean b50 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long41);
    boolean b51 = treeset_b10.retainAll((java.util.Collection<java.lang.Long>)arraylist_long41);
    boolean b52 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test212"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.lang.Object obj7 = treeset_b0.clone();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i10 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test213"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.lang.Boolean b16 = treeset_b7.pollLast();
    java.lang.Boolean b17 = treeset_b7.pollFirst();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b7.headSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test214"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b10.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b16);
    java.util.ArrayList<java.lang.Long> arraylist_long18 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array24 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long18, long_array24);
    boolean b26 = treeset_b17.removeAll((java.util.Collection<java.lang.Long>)arraylist_long18);
    boolean b27 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long18);
    treeset_b0.clear();
    java.util.Comparator<java.lang.Object> comparator_obj29 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj29);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test215"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    treeset_b12.clear();
    boolean b18 = treeset_b12.contains((java.lang.Object)(byte)100);
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.lang.Boolean b24 = treeset_b0.lower((java.lang.Boolean)false);
    int i25 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 2);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test216"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    boolean b8 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test217"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array14 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array14);
    boolean b16 = treeset_b7.removeAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.lang.Boolean b18 = treeset_b7.floor((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b7.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test218"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    int i7 = treeset_b6.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { false };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array10);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b8.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b8.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b17 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b8.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b19);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj28 = treeset_b21.comparator();
    java.lang.Object obj29 = treeset_b21.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b30.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b36);
    java.util.ArrayList<java.lang.Long> arraylist_long38 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array44 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long38, long_array44);
    boolean b46 = treeset_b37.removeAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    boolean b47 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    boolean b48 = treeset_b20.retainAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    boolean b49 = treeset_b6.retainAll((java.util.Collection<java.lang.Long>)arraylist_long38);
    java.util.TreeSet<java.lang.Boolean> treeset_b50 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array52 = new java.lang.Boolean[] { false };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b50, b_array52);
    java.util.Comparator<java.lang.Object> comparator_obj54 = treeset_b50.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b50.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    int i58 = treeset_b50.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b50);
    boolean b60 = treeset_b6.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test219"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b7.tailSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { false };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b13.comparator();
    java.lang.Boolean b19 = treeset_b13.lower((java.lang.Boolean)true);
    java.lang.Boolean b21 = treeset_b13.floor((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b13.last();
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b13.headSet((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b13.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b29 = treeset_b13.higher((java.lang.Boolean)false);
    boolean b30 = treeset_b7.equals((java.lang.Object)b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + false+ "'", b19.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + false+ "'", b21.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test220"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b28 = treeset_b21.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array32);
    boolean b34 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    boolean b35 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array38 = new java.lang.Boolean[] { false };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36, b_array38);
    java.util.Comparator<java.lang.Object> comparator_obj40 = treeset_b36.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b36.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b45 = treeset_b36.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b36.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array51);
    boolean b54 = treeset_b49.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array55 = treeset_b49.toArray();
    treeset_b49.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { false, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    java.util.SortedSet<java.lang.Boolean> sortedset_b63 = treeset_b57.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b64 = treeset_b57.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long65 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array68 = new java.lang.Long[] { (-1L), 0L };
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long65, long_array68);
    boolean b70 = treeset_b57.retainAll((java.util.Collection<java.lang.Long>)arraylist_long65);
    java.lang.String str71 = treeset_b57.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b72 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b57);
    boolean b73 = treeset_b49.equals((java.lang.Object)treeset_b72);
    java.util.TreeSet<java.lang.Boolean> treeset_b74 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array77 = new java.lang.Boolean[] { true, true };
    boolean b78 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b74, b_array77);
    java.util.SortedSet<java.lang.Boolean> sortedset_b80 = treeset_b74.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b81 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b80);
    java.util.ArrayList<java.lang.Long> arraylist_long82 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array88 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b89 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long82, long_array88);
    boolean b90 = treeset_b81.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b91 = treeset_b72.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b92 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b93 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b94 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b64 + "' != '" + true+ "'", b64.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "[]"+ "'", str71.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == true);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test221"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    java.lang.Boolean b14 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    boolean b20 = treeset_b15.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    boolean b24 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array27);
    boolean b30 = treeset_b25.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b33 = treeset_b25.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj34 = treeset_b25.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b25.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj37 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj37);
    java.lang.Boolean b40 = treeset_b38.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b41 = treeset_b38.descendingSet();
    boolean b42 = treeset_b25.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b41);
    java.lang.Boolean b44 = treeset_b25.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b25.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.Object obj48 = treeset_b25.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b49 = treeset_b15.remove(obj48);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b44 + "' != '" + true+ "'", b44.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj48);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test222"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.Object obj14 = treeset_b0.clone();
    int i15 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test223"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.lang.Boolean b21 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b22 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b22);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test224"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.lang.Boolean b14 = treeset_b7.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    java.util.Comparator<java.lang.Object> comparator_obj19 = treeset_b15.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b24 = treeset_b15.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b15.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array29);
    treeset_b27.clear();
    boolean b33 = treeset_b27.contains((java.lang.Object)(byte)100);
    boolean b34 = treeset_b15.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27);
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b27.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    treeset_b37.clear();
    java.lang.String str42 = treeset_b37.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b37);
    int i44 = treeset_b43.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { true, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b45.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b52 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b51);
    boolean b54 = treeset_b52.remove((java.lang.Object)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b55 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array58 = new java.lang.Boolean[] { true, true };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b55, b_array58);
    java.util.SortedSet<java.lang.Boolean> sortedset_b61 = treeset_b55.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b61);
    boolean b64 = treeset_b62.remove((java.lang.Object)false);
    java.lang.Boolean b66 = treeset_b62.lower((java.lang.Boolean)false);
    java.lang.Boolean b68 = treeset_b62.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b70 = treeset_b62.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b73 = treeset_b62.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long74 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array80 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b81 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long74, long_array80);
    boolean b82 = treeset_b62.removeAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    boolean b83 = treeset_b52.removeAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    boolean b84 = treeset_b43.retainAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    boolean b85 = treeset_b27.retainAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    boolean b86 = treeset_b7.removeAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    java.lang.Object[] obj_array87 = treeset_b7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[]"+ "'", str42.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array87);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test225"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { false };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b13.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b13.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b22 = treeset_b13.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b13.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array27);
    treeset_b25.clear();
    boolean b31 = treeset_b25.contains((java.lang.Object)(byte)100);
    boolean b32 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25);
    boolean b33 = treeset_b7.contains((java.lang.Object)b32);
    java.lang.Boolean b34 = treeset_b7.last();
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35, b_array37);
    boolean b40 = treeset_b35.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array41 = treeset_b35.toArray();
    treeset_b35.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    java.util.SortedSet<java.lang.Boolean> sortedset_b49 = treeset_b43.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b50 = treeset_b43.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long51 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array54 = new java.lang.Long[] { (-1L), 0L };
    boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long51, long_array54);
    boolean b56 = treeset_b43.retainAll((java.util.Collection<java.lang.Long>)arraylist_long51);
    java.lang.String str57 = treeset_b43.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b43);
    boolean b59 = treeset_b35.equals((java.lang.Object)treeset_b58);
    java.util.TreeSet<java.lang.Boolean> treeset_b60 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array63 = new java.lang.Boolean[] { true, true };
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b60, b_array63);
    java.util.SortedSet<java.lang.Boolean> sortedset_b66 = treeset_b60.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b67 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b66);
    java.util.ArrayList<java.lang.Long> arraylist_long68 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array74 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long68, long_array74);
    boolean b76 = treeset_b67.removeAll((java.util.Collection<java.lang.Long>)arraylist_long68);
    boolean b77 = treeset_b58.removeAll((java.util.Collection<java.lang.Long>)arraylist_long68);
    boolean b78 = treeset_b7.removeAll((java.util.Collection<java.lang.Long>)arraylist_long68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b34 + "' != '" + true+ "'", b34.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + true+ "'", b50.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[]"+ "'", str57.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test226"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.lang.Boolean b8 = treeset_b0.lower((java.lang.Boolean)true);
    int i9 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test227"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    java.util.ArrayList<java.lang.Long> arraylist_long14 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array19 = new java.lang.Long[] { 10L, 10L, 10L, (-1L) };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long14, long_array19);
    boolean b21 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long14);
    java.util.Comparator<java.lang.Object> comparator_obj22 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj22);
    java.lang.Boolean b25 = treeset_b23.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b23.descendingSet();
    boolean b27 = treeset_b23.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b23.descendingSet();
    boolean b30 = treeset_b23.add((java.lang.Boolean)false);
    boolean b31 = treeset_b0.equals((java.lang.Object)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test228"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Object[] obj_array13 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.Comparator<java.lang.Object> comparator_obj18 = treeset_b14.comparator();
    java.lang.Boolean b20 = treeset_b14.lower((java.lang.Boolean)true);
    boolean b22 = treeset_b14.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b14.iterator();
    java.util.Comparator<java.lang.Object> comparator_obj24 = treeset_b14.comparator();
    boolean b25 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b14.descendingSet();
    boolean b28 = treeset_b14.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + false+ "'", b20.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test229"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    treeset_b12.clear();
    boolean b18 = treeset_b12.contains((java.lang.Object)(byte)100);
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.ArrayList<java.lang.Boolean> arraylist_b20 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b20, b_array22);
    java.lang.Object[] obj_array27 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array28 = arraylist_b20.toArray(obj_array27);
    java.lang.Object[] obj_array29 = treeset_b0.toArray(obj_array27);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b31 = treeset_b30.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b31);

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test230"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    boolean b6 = treeset_b0.contains((java.lang.Object)(byte)100);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { false, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b7.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b14 = treeset_b7.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b15.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b23 = treeset_b15.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj27 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj27);
    java.lang.Boolean b30 = treeset_b28.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    boolean b36 = treeset_b31.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array37 = treeset_b31.toArray();
    java.lang.Object[] obj_array38 = treeset_b28.toArray(obj_array37);
    java.lang.Object[] obj_array39 = treeset_b15.toArray(obj_array37);
    java.lang.Object[] obj_array40 = treeset_b7.toArray(obj_array39);
    java.lang.Object[] obj_array41 = treeset_b0.toArray(obj_array39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + true+ "'", b23.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test231"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b12 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b12, b_array14);
    java.lang.Object[] obj_array19 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array20 = arraylist_b12.toArray(obj_array19);
    java.lang.Object[] obj_array21 = treeset_b0.toArray(obj_array20);
    java.lang.Boolean b22 = treeset_b0.first();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array25);
    boolean b28 = treeset_b23.add((java.lang.Boolean)true);
    treeset_b23.clear();
    boolean b30 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    treeset_b31.clear();
    boolean b37 = treeset_b31.contains((java.lang.Object)(byte)100);
    treeset_b31.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b31);
    boolean b40 = treeset_b0.equals((java.lang.Object)treeset_b39);
    java.lang.Object[] obj_array41 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test232"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.String str19 = treeset_b0.toString();
    java.lang.Boolean b21 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array24);
    boolean b27 = treeset_b22.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b22.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long31 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array35 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long31, long_array35);
    boolean b37 = treeset_b22.removeAll((java.util.Collection<java.lang.Long>)arraylist_long31);
    boolean b38 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long31);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true]"+ "'", str19.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test233"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.lang.Boolean b10 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + true+ "'", b10.equals(true));

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test234"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Object obj46 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test235"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.Iterator<java.lang.Boolean> iterator_b9 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { false, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b12.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj19 = treeset_b12.comparator();
    java.lang.Object obj20 = treeset_b12.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b27);
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array35 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array35);
    boolean b37 = treeset_b28.removeAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    boolean b38 = treeset_b12.removeAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    boolean b39 = treeset_b0.contains((java.lang.Object)b38);
    int i40 = treeset_b0.size();
    java.lang.Object obj41 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj41);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test236"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b7.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b13);
    java.util.ArrayList<java.lang.Long> arraylist_long15 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array21 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long15, long_array21);
    boolean b23 = treeset_b14.removeAll((java.util.Collection<java.lang.Long>)arraylist_long15);
    boolean b24 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long15);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b25 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test237"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b7.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b7.last();
    java.util.Collection<java.lang.Object[]> collection_obj_array13 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b14 = treeset_b7.containsAll(collection_obj_array13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test238"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.lang.Boolean b6 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array9);
    boolean b12 = treeset_b7.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array13 = treeset_b7.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b14.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b20);
    java.util.ArrayList<java.lang.Long> arraylist_long22 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array28 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long22, long_array28);
    boolean b30 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    boolean b31 = treeset_b7.retainAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    boolean b32 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test239"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array3);
    java.util.Comparator<java.lang.Object> comparator_obj5 = treeset_b1.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b1.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b10 = treeset_b1.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b1.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    treeset_b13.clear();
    boolean b19 = treeset_b13.contains((java.lang.Object)(byte)100);
    boolean b20 = treeset_b1.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13);
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b13.tailSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b13.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b24.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b30);
    boolean b33 = treeset_b31.remove((java.lang.Object)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true, true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array37);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b34.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b40);
    boolean b43 = treeset_b41.remove((java.lang.Object)false);
    java.lang.Boolean b45 = treeset_b41.lower((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b41.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b49 = treeset_b41.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b52 = treeset_b41.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long53 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array59 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long53, long_array59);
    boolean b61 = treeset_b41.removeAll((java.util.Collection<java.lang.Long>)arraylist_long53);
    boolean b62 = treeset_b31.removeAll((java.util.Collection<java.lang.Long>)arraylist_long53);
    boolean b63 = treeset_b13.removeAll((java.util.Collection<java.lang.Long>)arraylist_long53);
    boolean b64 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test240"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.descendingIterator();
    java.lang.Object obj6 = treeset_b0.clone();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.lang.Boolean b10 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test241"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    treeset_b12.clear();
    java.lang.String str17 = treeset_b12.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b19 = treeset_b18.iterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b20 = treeset_b0.contains((java.lang.Object)treeset_b18);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[]"+ "'", str17.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b19);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test242"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    int i7 = treeset_b6.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b6.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b6.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test243"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array13);
    boolean b16 = treeset_b11.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array17 = treeset_b11.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b18 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18, b_array20);
    java.lang.Object[] obj_array25 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array26 = arraylist_b18.toArray(obj_array25);
    boolean b27 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18);
    java.lang.Boolean b29 = treeset_b11.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b11.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true, true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array36);
    java.util.SortedSet<java.lang.Boolean> sortedset_b39 = treeset_b33.tailSet((java.lang.Boolean)false);
    boolean b40 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33);
    java.lang.Boolean b42 = treeset_b33.ceiling((java.lang.Boolean)false);
    boolean b43 = treeset_b0.equals((java.lang.Object)b42);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { true, true };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array47);
    java.util.SortedSet<java.lang.Boolean> sortedset_b50 = treeset_b44.tailSet((java.lang.Boolean)false);
    java.lang.Object[] obj_array51 = treeset_b44.toArray();
    java.lang.Object[] obj_array52 = treeset_b0.toArray(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + true+ "'", b29.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b42 + "' != '" + true+ "'", b42.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test244"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.String str11 = treeset_b0.toString();
    java.lang.String str12 = treeset_b0.toString();
    boolean b13 = treeset_b0.isEmpty();
    java.lang.Object obj14 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[true]"+ "'", str11.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[true]"+ "'", str12.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test245"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.lang.Boolean b16 = treeset_b7.pollLast();
    int i17 = treeset_b7.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test246"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj6 = treeset_b0.comparator();
    java.lang.Object obj7 = treeset_b0.clone();
    java.util.Comparator<java.lang.Object> comparator_obj8 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj8);
    java.lang.Boolean b11 = treeset_b9.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b9.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b9);
    boolean b14 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9);
    java.util.Comparator<java.lang.Object> comparator_obj15 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj15);
    java.lang.Boolean b18 = treeset_b16.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array21);
    boolean b24 = treeset_b19.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array25 = treeset_b19.toArray();
    java.lang.Object[] obj_array26 = treeset_b16.toArray(obj_array25);
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = treeset_b0.remove((java.lang.Object)obj_array26);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test247"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.String str19 = treeset_b0.toString();
    java.lang.Boolean b21 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array24);
    java.util.Comparator<java.lang.Object> comparator_obj26 = treeset_b22.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b22.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b31 = treeset_b22.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b33 = treeset_b22.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b22);
    boolean b35 = treeset_b0.equals((java.lang.Object)treeset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true]"+ "'", str19.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test248"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array20);
    boolean b23 = treeset_b18.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array24 = treeset_b18.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b25 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b25, b_array27);
    java.lang.Object[] obj_array32 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array33 = arraylist_b25.toArray(obj_array32);
    boolean b34 = treeset_b18.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b25);
    java.lang.Boolean b36 = treeset_b18.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b18.tailSet((java.lang.Boolean)true, true);
    java.lang.Boolean b41 = treeset_b18.higher((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b18.headSet((java.lang.Boolean)false);
    java.lang.Boolean b45 = treeset_b18.floor((java.lang.Boolean)false);
    java.lang.Object[] obj_array46 = treeset_b18.toArray();
    boolean b47 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b36 + "' != '" + true+ "'", b36.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test249"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.lang.Boolean b5 = treeset_b0.higher((java.lang.Boolean)false);
    boolean b7 = treeset_b0.equals((java.lang.Object)(-1L));
    java.lang.Boolean b9 = treeset_b0.higher((java.lang.Boolean)false);
    java.lang.String str10 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[false]"+ "'", str10.equals("[false]"));

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test250"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b1.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { false };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array7);
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b5.comparator();
    java.lang.Boolean b11 = treeset_b5.lower((java.lang.Boolean)true);
    boolean b13 = treeset_b5.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b5.iterator();
    boolean b15 = treeset_b1.equals((java.lang.Object)iterator_b14);
    java.lang.Object obj16 = treeset_b1.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj16);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test251"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b12 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b12, b_array14);
    java.lang.Object[] obj_array19 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array20 = arraylist_b12.toArray(obj_array19);
    java.lang.Object[] obj_array21 = treeset_b0.toArray(obj_array20);
    java.lang.Boolean b22 = treeset_b0.first();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array25);
    boolean b28 = treeset_b23.add((java.lang.Boolean)true);
    treeset_b23.clear();
    boolean b30 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    treeset_b31.clear();
    boolean b37 = treeset_b31.contains((java.lang.Object)(byte)100);
    treeset_b31.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b31);
    boolean b40 = treeset_b0.equals((java.lang.Object)treeset_b39);
    java.util.SortedSet<java.lang.Boolean> sortedset_b42 = treeset_b39.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b43 = treeset_b39.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b43);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test252"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array14 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array14);
    boolean b16 = treeset_b7.removeAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.util.Collection<java.lang.Long> collection_long17 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b18 = treeset_b7.removeAll(collection_long17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test253"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.lang.Boolean b16 = treeset_b10.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b17.headSet((java.lang.Boolean)false);
    boolean b20 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.lang.Boolean b21 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + false+ "'", b16.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + false+ "'", b21.equals(false));

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test254"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.lang.Boolean b5 = treeset_b0.higher((java.lang.Boolean)false);
    java.lang.Boolean b6 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test255"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Object obj10 = treeset_b7.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b7.headSet((java.lang.Boolean)false);
    java.lang.Boolean b14 = treeset_b7.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test256"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.lang.Object obj7 = treeset_b0.clone();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i10 = treeset_b0.size();
    java.lang.Boolean b12 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test257"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj6 = treeset_b0.comparator();
    java.lang.Boolean b8 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test258"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { false };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array7);
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b5.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b5.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array13 = treeset_b5.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b5);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b14.iterator();
    boolean b16 = treeset_b0.equals((java.lang.Object)treeset_b14);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array19);
    treeset_b17.clear();
    java.lang.String str22 = treeset_b17.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b17);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b17);
    treeset_b29.clear();
    // The following exception was thrown during execution in test generation
    try {
    boolean b31 = treeset_b14.remove((java.lang.Object)treeset_b29);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test259"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    boolean b20 = treeset_b19.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test260"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b28 = treeset_b21.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array32);
    boolean b34 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    boolean b35 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array38 = new java.lang.Boolean[] { false };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36, b_array38);
    java.util.Comparator<java.lang.Object> comparator_obj40 = treeset_b36.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b36.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b45 = treeset_b36.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b36.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array51);
    boolean b54 = treeset_b49.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array55 = treeset_b49.toArray();
    treeset_b49.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { false, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    java.util.SortedSet<java.lang.Boolean> sortedset_b63 = treeset_b57.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b64 = treeset_b57.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long65 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array68 = new java.lang.Long[] { (-1L), 0L };
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long65, long_array68);
    boolean b70 = treeset_b57.retainAll((java.util.Collection<java.lang.Long>)arraylist_long65);
    java.lang.String str71 = treeset_b57.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b72 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b57);
    boolean b73 = treeset_b49.equals((java.lang.Object)treeset_b72);
    java.util.TreeSet<java.lang.Boolean> treeset_b74 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array77 = new java.lang.Boolean[] { true, true };
    boolean b78 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b74, b_array77);
    java.util.SortedSet<java.lang.Boolean> sortedset_b80 = treeset_b74.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b81 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b80);
    java.util.ArrayList<java.lang.Long> arraylist_long82 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array88 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b89 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long82, long_array88);
    boolean b90 = treeset_b81.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b91 = treeset_b72.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b92 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b93 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36);
    java.util.Comparator<java.lang.Object> comparator_obj94 = treeset_b0.comparator();
    java.lang.Boolean b96 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b64 + "' != '" + true+ "'", b64.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "[]"+ "'", str71.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj94);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b96 + "' != '" + true+ "'", b96.equals(true));

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test261"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.lang.Boolean b14 = treeset_b7.floor((java.lang.Boolean)true);
    int i15 = treeset_b7.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test262"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Boolean b9 = treeset_b0.last();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj15 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test263"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    java.lang.Object[] obj_array5 = treeset_b1.toArray();
    java.lang.Boolean b6 = treeset_b1.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b6);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test264"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b13.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test265"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b28 = treeset_b21.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array32);
    boolean b34 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    boolean b35 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array38 = new java.lang.Boolean[] { false };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36, b_array38);
    java.util.Comparator<java.lang.Object> comparator_obj40 = treeset_b36.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b36.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b45 = treeset_b36.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b36.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array51);
    boolean b54 = treeset_b49.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array55 = treeset_b49.toArray();
    treeset_b49.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { false, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    java.util.SortedSet<java.lang.Boolean> sortedset_b63 = treeset_b57.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b64 = treeset_b57.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long65 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array68 = new java.lang.Long[] { (-1L), 0L };
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long65, long_array68);
    boolean b70 = treeset_b57.retainAll((java.util.Collection<java.lang.Long>)arraylist_long65);
    java.lang.String str71 = treeset_b57.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b72 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b57);
    boolean b73 = treeset_b49.equals((java.lang.Object)treeset_b72);
    java.util.TreeSet<java.lang.Boolean> treeset_b74 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array77 = new java.lang.Boolean[] { true, true };
    boolean b78 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b74, b_array77);
    java.util.SortedSet<java.lang.Boolean> sortedset_b80 = treeset_b74.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b81 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b80);
    java.util.ArrayList<java.lang.Long> arraylist_long82 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array88 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b89 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long82, long_array88);
    boolean b90 = treeset_b81.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b91 = treeset_b72.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b92 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long82);
    boolean b93 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36);
    boolean b95 = treeset_b36.add((java.lang.Boolean)true);
    java.lang.Boolean b97 = treeset_b36.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b64 + "' != '" + true+ "'", b64.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "[]"+ "'", str71.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b97 + "' != '" + false+ "'", b97.equals(false));

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test266"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.higher((java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test267"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    int i5 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test268"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b0.descendingSet();
    java.lang.Boolean b16 = treeset_b0.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test269"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj11 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj11);
    java.lang.Boolean b14 = treeset_b12.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    boolean b20 = treeset_b15.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array21 = treeset_b15.toArray();
    java.lang.Object[] obj_array22 = treeset_b12.toArray(obj_array21);
    java.lang.Object[] obj_array23 = treeset_b0.toArray(obj_array22);
    java.lang.Boolean b24 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b27 = treeset_b0.headSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b27);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test270"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Boolean b14 = treeset_b0.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test271"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.lang.Boolean b9 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.descendingSet();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test272"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b0.descendingIterator();
    java.lang.Object obj30 = treeset_b0.clone();
    java.lang.Boolean b32 = treeset_b0.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test273"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Boolean b12 = treeset_b0.pollFirst();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.headSet((java.lang.Boolean)true, true);
    boolean b16 = treeset_b0.isEmpty();
    boolean b18 = treeset_b0.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test274"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array14 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array14);
    boolean b16 = treeset_b7.removeAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.util.Comparator<java.lang.Object> comparator_obj17 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj17);
    java.lang.Boolean b20 = treeset_b18.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b18.descendingSet();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b18.headSet((java.lang.Boolean)true, false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = treeset_b7.remove((java.lang.Object)treeset_b18);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test275"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b7.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b13.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b21 = treeset_b13.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b13.headSet((java.lang.Boolean)false);
    boolean b24 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + false+ "'", b21.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test276"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long9 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array13 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long9, long_array13);
    boolean b15 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long9);
    int i16 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { false };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array19);
    java.util.Comparator<java.lang.Object> comparator_obj21 = treeset_b17.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b17.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array25 = treeset_b17.toArray();
    java.util.Iterator<java.lang.Boolean> iterator_b26 = treeset_b17.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b17.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { false, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b29.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj36 = treeset_b29.comparator();
    java.lang.Object obj37 = treeset_b29.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b38.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b44);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array52);
    boolean b54 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b29.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b56 = treeset_b17.contains((java.lang.Object)b55);
    int i57 = treeset_b17.size();
    // The following exception was thrown during execution in test generation
    try {
    boolean b58 = treeset_b0.remove((java.lang.Object)treeset_b17);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 1);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test277"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.lang.Boolean b9 = treeset_b0.pollLast();
    boolean b11 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test278"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    treeset_b1.clear();
    java.util.Comparator<java.lang.Object> comparator_obj6 = treeset_b1.comparator();
    java.lang.Boolean b8 = treeset_b1.higher((java.lang.Boolean)true);
    boolean b10 = treeset_b1.contains((java.lang.Object)(short)100);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test279"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b11.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b17);
    boolean b20 = treeset_b18.remove((java.lang.Object)false);
    java.lang.Boolean b22 = treeset_b18.lower((java.lang.Boolean)false);
    java.lang.Boolean b24 = treeset_b18.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b18.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)false, false);
    int i30 = treeset_b18.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { false };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    java.util.Comparator<java.lang.Object> comparator_obj35 = treeset_b31.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b31.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b40 = treeset_b31.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b42 = treeset_b31.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b42);
    boolean b44 = treeset_b18.addAll((java.util.Collection<java.lang.Boolean>)sortedset_b42);
    boolean b45 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18);
    java.util.Comparator<java.lang.Object> comparator_obj46 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj46);

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test280"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Boolean b9 = treeset_b0.last();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test281"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b49 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test282"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.lang.Object obj21 = treeset_b0.clone();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test283"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    boolean b8 = treeset_b1.add((java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b1.pollLast();
    boolean b11 = treeset_b1.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test284"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.lang.Boolean b16 = treeset_b7.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b7);
    java.lang.Boolean b19 = treeset_b7.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test285"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    boolean b8 = treeset_b1.add((java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b1.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b1.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj20 = treeset_b13.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    boolean b26 = treeset_b21.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array27 = treeset_b21.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b28 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28, b_array30);
    java.lang.Object[] obj_array35 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array36 = arraylist_b28.toArray(obj_array35);
    boolean b37 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28);
    java.lang.Boolean b39 = treeset_b21.ceiling((java.lang.Boolean)false);
    boolean b40 = treeset_b21.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b41 = treeset_b21.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { false, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b42.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b49 = treeset_b42.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long50 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array53 = new java.lang.Long[] { (-1L), 0L };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long50, long_array53);
    boolean b55 = treeset_b42.retainAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b56 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b57 = treeset_b13.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b58 = treeset_b1.contains((java.lang.Object)b57);
    java.lang.Boolean b60 = treeset_b1.higher((java.lang.Boolean)false);
    java.lang.Boolean b62 = treeset_b1.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b63 = treeset_b1.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b63);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test286"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Object[] obj_array13 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.Comparator<java.lang.Object> comparator_obj18 = treeset_b14.comparator();
    java.lang.Boolean b20 = treeset_b14.lower((java.lang.Boolean)true);
    boolean b22 = treeset_b14.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b14.iterator();
    java.util.Comparator<java.lang.Object> comparator_obj24 = treeset_b14.comparator();
    boolean b25 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b14.descendingSet();
    java.lang.String str27 = treeset_b14.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + false+ "'", b20.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[false]"+ "'", str27.equals("[false]"));

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test287"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test288"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b7 = treeset_b0.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long8 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array11 = new java.lang.Long[] { (-1L), 0L };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long8, long_array11);
    boolean b13 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long8);
    java.lang.String str14 = treeset_b0.toString();
    java.lang.Boolean b15 = treeset_b0.pollLast();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b16 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test289"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b7.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { false };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b13.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b13.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array21 = treeset_b13.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b13);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b22.iterator();
    boolean b25 = treeset_b22.add((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj26 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj26);
    java.lang.Boolean b29 = treeset_b27.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array32);
    boolean b35 = treeset_b30.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array36 = treeset_b30.toArray();
    java.lang.Object[] obj_array37 = treeset_b27.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b22.toArray(obj_array37);
    java.lang.Boolean b39 = treeset_b22.first();
    boolean b40 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + false+ "'", b39.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test290"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.descendingIterator();
    java.lang.Object obj6 = treeset_b0.clone();
    java.lang.Object[] obj_array7 = treeset_b0.toArray();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.headSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test291"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.lang.Boolean b9 = treeset_b0.pollLast();
    java.lang.Boolean b11 = treeset_b0.lower((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test292"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    treeset_b12.clear();
    java.lang.String str14 = treeset_b12.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test293"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b7.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b7);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b12.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    treeset_b16.clear();
    java.lang.String str21 = treeset_b16.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b16);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b22.iterator();
    java.lang.Boolean b24 = treeset_b22.pollLast();
    boolean b25 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[]"+ "'", str21.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test294"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    java.util.ArrayList<java.lang.Long> arraylist_long17 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array23 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long17, long_array23);
    boolean b25 = treeset_b16.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    boolean b26 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    int i27 = treeset_b0.size();
    boolean b29 = treeset_b0.add((java.lang.Boolean)true);
    boolean b30 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test295"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.lang.Boolean b16 = treeset_b10.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b17.headSet((java.lang.Boolean)false);
    boolean b20 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b21.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array29 = treeset_b21.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b21);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { false };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    java.util.Comparator<java.lang.Object> comparator_obj35 = treeset_b31.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b31.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array39 = treeset_b31.toArray();
    java.lang.Object[] obj_array40 = treeset_b30.toArray(obj_array39);
    boolean b41 = treeset_b17.equals((java.lang.Object)obj_array39);
    java.lang.Boolean b43 = treeset_b17.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + false+ "'", b16.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b43);

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test296"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    java.lang.Boolean b14 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    boolean b20 = treeset_b15.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    boolean b24 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b27 = treeset_b15.tailSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b27);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test297"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.Boolean b14 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test298"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test299"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.SortedSet<java.lang.Boolean> sortedset_b2 = treeset_b0.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b2);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test300"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    boolean b9 = treeset_b0.isEmpty();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b10 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test301"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b8 = treeset_b0.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test302"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b57 = treeset_b51.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b58 = treeset_b51.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b58 + "' != '" + false+ "'", b58.equals(false));

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test303"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { false };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array11);
    java.util.Comparator<java.lang.Object> comparator_obj13 = treeset_b9.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b9.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b18 = treeset_b9.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b9.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    treeset_b21.clear();
    boolean b27 = treeset_b21.contains((java.lang.Object)(byte)100);
    boolean b28 = treeset_b9.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b31 = treeset_b9.headSet((java.lang.Boolean)false, true);
    boolean b32 = treeset_b0.equals((java.lang.Object)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test304"); }


    java.util.ArrayList<java.lang.Boolean> arraylist_b0 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b0, b_array2);
    java.lang.String str4 = arraylist_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)arraylist_b0);
    treeset_b5.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[true]"+ "'", str4.equals("[true]"));

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test305"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    boolean b18 = treeset_b13.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array19 = treeset_b13.toArray();
    treeset_b13.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b28 = treeset_b21.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array32);
    boolean b34 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.lang.String str35 = treeset_b21.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b21);
    boolean b37 = treeset_b13.equals((java.lang.Object)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b38.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b44);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array52);
    boolean b54 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b56 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[]"+ "'", str35.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test306"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.lang.Boolean b13 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    java.lang.Object[] obj_array17 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test307"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.tailSet((java.lang.Boolean)true);
    boolean b11 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test308"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test309"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b10.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array18 = treeset_b10.toArray();
    java.lang.Object[] obj_array19 = treeset_b9.toArray(obj_array18);
    java.lang.Boolean b21 = treeset_b9.floor((java.lang.Boolean)false);
    java.lang.Boolean b23 = treeset_b9.lower((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + false+ "'", b21.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + false+ "'", b23.equals(false));

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test310"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.floor((java.lang.Boolean)false);
    treeset_b0.clear();
    java.lang.Object obj47 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj47);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test311"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    boolean b8 = treeset_b1.add((java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b1.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b1.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj20 = treeset_b13.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    boolean b26 = treeset_b21.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array27 = treeset_b21.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b28 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28, b_array30);
    java.lang.Object[] obj_array35 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array36 = arraylist_b28.toArray(obj_array35);
    boolean b37 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28);
    java.lang.Boolean b39 = treeset_b21.ceiling((java.lang.Boolean)false);
    boolean b40 = treeset_b21.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b41 = treeset_b21.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { false, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b42.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b49 = treeset_b42.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long50 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array53 = new java.lang.Long[] { (-1L), 0L };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long50, long_array53);
    boolean b55 = treeset_b42.retainAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b56 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b57 = treeset_b13.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b58 = treeset_b1.contains((java.lang.Object)b57);
    java.util.Iterator<java.lang.Boolean> iterator_b59 = treeset_b1.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b60 = treeset_b1.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b60);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test312"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    boolean b13 = treeset_b7.add((java.lang.Boolean)false);
    java.lang.String str14 = treeset_b7.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[false, true]"+ "'", str14.equals("[false, true]"));

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test313"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { false };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b13.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b13.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b22 = treeset_b13.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b13.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array27);
    treeset_b25.clear();
    boolean b31 = treeset_b25.contains((java.lang.Object)(byte)100);
    boolean b32 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25);
    boolean b33 = treeset_b7.contains((java.lang.Object)b32);
    boolean b35 = treeset_b7.add((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj36 = treeset_b7.comparator();
    java.lang.Boolean b38 = treeset_b7.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test314"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    java.util.ArrayList<java.lang.Long> arraylist_long17 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array23 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long17, long_array23);
    boolean b25 = treeset_b16.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    boolean b26 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    int i27 = treeset_b0.size();
    java.util.Iterator<java.lang.Boolean> iterator_b28 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b28);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test315"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test316"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)true);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test317"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.lang.Boolean b13 = treeset_b0.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test318"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.headSet((java.lang.Boolean)true, true);
    java.lang.Boolean b13 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + true+ "'", b13.equals(true));

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test319"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.tailSet((java.lang.Boolean)false, false);
    int i19 = treeset_b7.size();
    int i20 = treeset_b7.size();
    boolean b21 = treeset_b7.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test320"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b9.iterator();
    boolean b12 = treeset_b9.add((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj13 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj13);
    java.lang.Boolean b16 = treeset_b14.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array19);
    boolean b22 = treeset_b17.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array23 = treeset_b17.toArray();
    java.lang.Object[] obj_array24 = treeset_b14.toArray(obj_array23);
    java.lang.Object[] obj_array25 = treeset_b9.toArray(obj_array24);
    java.lang.Boolean b26 = treeset_b9.first();
    java.lang.Boolean b27 = treeset_b9.last();
    boolean b29 = treeset_b9.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + false+ "'", b26.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + true+ "'", b27.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test321"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.Boolean b15 = treeset_b0.higher((java.lang.Boolean)false);
    boolean b16 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test322"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Boolean b9 = treeset_b0.last();
    java.lang.Boolean b11 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Object obj12 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test323"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    java.lang.Boolean b14 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    boolean b20 = treeset_b15.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    boolean b24 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { false };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array27);
    java.util.Comparator<java.lang.Object> comparator_obj29 = treeset_b25.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b32 = treeset_b25.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b34 = treeset_b25.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b25.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    treeset_b37.clear();
    boolean b43 = treeset_b37.contains((java.lang.Object)(byte)100);
    boolean b44 = treeset_b25.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37);
    java.util.ArrayList<java.lang.Boolean> arraylist_b45 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { true };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b45, b_array47);
    java.lang.Object[] obj_array52 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array53 = arraylist_b45.toArray(obj_array52);
    java.lang.Object[] obj_array54 = treeset_b25.toArray(obj_array52);
    java.util.TreeSet<java.lang.Boolean> treeset_b55 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b25);
    boolean b56 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25);
    java.lang.Boolean b58 = treeset_b25.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b58 + "' != '" + false+ "'", b58.equals(false));

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test324"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b8 = treeset_b7.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b7.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test325"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Object[] obj_array10 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array13);
    boolean b16 = treeset_b11.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array17 = treeset_b11.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b18 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18, b_array20);
    java.lang.Object[] obj_array25 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array26 = arraylist_b18.toArray(obj_array25);
    boolean b27 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18);
    java.lang.Boolean b29 = treeset_b11.ceiling((java.lang.Boolean)false);
    java.lang.String str30 = treeset_b11.toString();
    java.lang.Boolean b32 = treeset_b11.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { true };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array35);
    boolean b38 = treeset_b33.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b33.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long42 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array46 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long42, long_array46);
    boolean b48 = treeset_b33.removeAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    boolean b49 = treeset_b11.retainAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    boolean b50 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array53 = new java.lang.Boolean[] { true };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b51, b_array53);
    boolean b56 = treeset_b51.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b61 = treeset_b51.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    boolean b63 = treeset_b51.add((java.lang.Boolean)true);
    boolean b64 = treeset_b0.equals((java.lang.Object)treeset_b51);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b69 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + true+ "'", b29.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "[true]"+ "'", str30.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b69);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test326"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b7.descendingIterator();
    boolean b11 = treeset_b7.isEmpty();
    java.lang.Object[] obj_array12 = treeset_b7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test327"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b49 = treeset_b48.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b49);

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test328"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    boolean b56 = treeset_b51.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test329"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    boolean b8 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b11 = treeset_b0.last();
    treeset_b0.clear();
    java.lang.Boolean b13 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test330"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    boolean b8 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b11 = treeset_b0.last();
    java.lang.Boolean b12 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test331"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b9 = treeset_b0.iterator();
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { false };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array13);
    java.util.Comparator<java.lang.Object> comparator_obj15 = treeset_b11.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b11.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj17 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj17);
    java.lang.Boolean b20 = treeset_b18.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj21 = treeset_b18.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b18);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b23.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b29);
    boolean b32 = treeset_b30.remove((java.lang.Object)false);
    java.lang.Boolean b34 = treeset_b30.lower((java.lang.Boolean)false);
    java.lang.Boolean b36 = treeset_b30.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b41 = treeset_b30.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long42 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array48 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long42, long_array48);
    boolean b50 = treeset_b30.removeAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    boolean b51 = treeset_b22.retainAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    boolean b52 = treeset_b11.retainAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    boolean b53 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test332"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b10.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b16);
    java.util.ArrayList<java.lang.Long> arraylist_long18 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array24 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long18, long_array24);
    boolean b26 = treeset_b17.removeAll((java.util.Collection<java.lang.Long>)arraylist_long18);
    boolean b27 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long18);
    treeset_b0.clear();
    java.util.Collection<java.lang.Boolean> collection_b29 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b30 = treeset_b0.addAll(collection_b29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test333"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { false };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array46);
    java.util.Comparator<java.lang.Object> comparator_obj48 = treeset_b44.comparator();
    java.lang.Boolean b50 = treeset_b44.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b44);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b51.headSet((java.lang.Boolean)false);
    boolean b54 = treeset_b0.equals((java.lang.Object)treeset_b51);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b57 = treeset_b51.headSet((java.lang.Boolean)false, false);
    treeset_b51.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b59 = treeset_b51.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b62 = treeset_b51.headSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + false+ "'", b50.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b62);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test334"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Object[] obj_array10 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array13);
    boolean b16 = treeset_b11.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array17 = treeset_b11.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b18 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18, b_array20);
    java.lang.Object[] obj_array25 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array26 = arraylist_b18.toArray(obj_array25);
    boolean b27 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18);
    java.lang.Boolean b29 = treeset_b11.ceiling((java.lang.Boolean)false);
    java.lang.String str30 = treeset_b11.toString();
    java.lang.Boolean b32 = treeset_b11.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { true };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array35);
    boolean b38 = treeset_b33.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b33.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long42 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array46 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long42, long_array46);
    boolean b48 = treeset_b33.removeAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    boolean b49 = treeset_b11.retainAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    boolean b50 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long42);
    java.util.SortedSet<java.lang.Boolean> sortedset_b52 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + true+ "'", b29.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "[true]"+ "'", str30.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b52);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test335"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.lang.Boolean b27 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.floor((java.lang.Boolean)true);
    boolean b30 = treeset_b0.contains((java.lang.Object)b29);
    java.util.Comparator<java.lang.Object> comparator_obj31 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj31);
    java.util.SortedSet<java.lang.Boolean> sortedset_b34 = treeset_b32.tailSet((java.lang.Boolean)true);
    boolean b35 = treeset_b0.remove((java.lang.Object)true);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    boolean b42 = treeset_b37.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array43 = treeset_b37.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b44 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b44, b_array46);
    java.lang.Object[] obj_array51 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array52 = arraylist_b44.toArray(obj_array51);
    boolean b53 = treeset_b37.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b44);
    java.lang.Boolean b55 = treeset_b37.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b58 = treeset_b37.tailSet((java.lang.Boolean)true, true);
    java.lang.Object[] obj_array59 = treeset_b37.toArray();
    java.lang.Object[] obj_array60 = treeset_b0.toArray(obj_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + false+ "'", b29.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b55 + "' != '" + true+ "'", b55.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array60);

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test336"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.lang.Boolean b27 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.floor((java.lang.Boolean)true);
    boolean b30 = treeset_b0.contains((java.lang.Object)b29);
    java.util.Comparator<java.lang.Object> comparator_obj31 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj31);
    java.util.SortedSet<java.lang.Boolean> sortedset_b34 = treeset_b32.tailSet((java.lang.Boolean)true);
    boolean b35 = treeset_b0.remove((java.lang.Object)true);
    java.lang.String str36 = treeset_b0.toString();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + false+ "'", b29.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "[]"+ "'", str36.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test337"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b4 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array6 = new java.lang.Boolean[] { true };
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b4, b_array6);
    boolean b9 = treeset_b4.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array10 = treeset_b4.toArray();
    java.lang.Object[] obj_array11 = treeset_b1.toArray(obj_array10);
    java.lang.Object obj12 = null;
    boolean b13 = treeset_b1.equals(obj12);
    java.lang.Object obj14 = treeset_b1.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    java.util.Comparator<java.lang.Object> comparator_obj19 = treeset_b15.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b24 = treeset_b15.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b15.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array29);
    treeset_b27.clear();
    boolean b33 = treeset_b27.contains((java.lang.Object)(byte)100);
    boolean b34 = treeset_b15.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27);
    java.util.ArrayList<java.lang.Boolean> arraylist_b35 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b35, b_array37);
    java.lang.Object[] obj_array42 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array43 = arraylist_b35.toArray(obj_array42);
    java.lang.Object[] obj_array44 = treeset_b15.toArray(obj_array42);
    java.lang.Object[] obj_array45 = treeset_b1.toArray(obj_array42);
    java.lang.Boolean b47 = treeset_b1.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test338"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    boolean b19 = treeset_b14.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array20 = treeset_b14.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b27);
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array35 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array35);
    boolean b37 = treeset_b28.removeAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    boolean b38 = treeset_b14.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    boolean b39 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b44 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b44);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test339"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.lang.Boolean b23 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test340"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    boolean b21 = treeset_b16.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b16.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj25 = treeset_b16.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b16.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj28 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj28);
    java.lang.Boolean b31 = treeset_b29.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b29.descendingSet();
    boolean b33 = treeset_b16.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b32);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true, true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array37);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b34.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b42 = treeset_b34.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b45 = treeset_b34.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj46 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj46);
    java.lang.Boolean b49 = treeset_b47.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b50 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array52 = new java.lang.Boolean[] { true };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b50, b_array52);
    boolean b55 = treeset_b50.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array56 = treeset_b50.toArray();
    java.lang.Object[] obj_array57 = treeset_b47.toArray(obj_array56);
    java.lang.Object[] obj_array58 = treeset_b34.toArray(obj_array56);
    java.lang.Object[] obj_array59 = treeset_b16.toArray(obj_array56);
    java.util.TreeSet<java.lang.Boolean> treeset_b60 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array62 = new java.lang.Boolean[] { false };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b60, b_array62);
    java.util.Comparator<java.lang.Object> comparator_obj64 = treeset_b60.comparator();
    java.lang.Boolean b66 = treeset_b60.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b67 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b60);
    java.util.SortedSet<java.lang.Boolean> sortedset_b69 = treeset_b67.headSet((java.lang.Boolean)false);
    boolean b70 = treeset_b16.equals((java.lang.Object)treeset_b67);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b73 = treeset_b67.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b74 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array76 = new java.lang.Boolean[] { true };
    boolean b77 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b74, b_array76);
    boolean b79 = treeset_b74.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b84 = treeset_b74.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.util.Iterator<java.lang.Boolean> iterator_b85 = treeset_b74.descendingIterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b87 = treeset_b74.headSet((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b89 = treeset_b74.headSet((java.lang.Boolean)true);
    boolean b90 = treeset_b67.equals((java.lang.Object)treeset_b74);
    boolean b91 = treeset_b7.equals((java.lang.Object)treeset_b67);
    treeset_b67.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b42 + "' != '" + true+ "'", b42.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b66 + "' != '" + false+ "'", b66.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test341"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Boolean b9 = treeset_b0.last();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test342"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    boolean b18 = treeset_b13.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array19 = treeset_b13.toArray();
    treeset_b13.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b28 = treeset_b21.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array32);
    boolean b34 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.lang.String str35 = treeset_b21.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b21);
    boolean b37 = treeset_b13.equals((java.lang.Object)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b38.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b44);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array52);
    boolean b54 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b56 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    java.util.SortedSet<java.lang.Boolean> sortedset_b63 = treeset_b57.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b64 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b63);
    boolean b66 = treeset_b64.remove((java.lang.Object)false);
    java.lang.Boolean b68 = treeset_b64.lower((java.lang.Boolean)false);
    java.lang.Boolean b70 = treeset_b64.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b72 = treeset_b64.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b75 = treeset_b64.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long76 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array82 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b83 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long76, long_array82);
    boolean b84 = treeset_b64.removeAll((java.util.Collection<java.lang.Long>)arraylist_long76);
    boolean b85 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[]"+ "'", str35.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test343"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { false };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    java.util.Comparator<java.lang.Object> comparator_obj16 = treeset_b12.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b12.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b21 = treeset_b12.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b12.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b24 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b24, b_array26);
    java.lang.Object[] obj_array31 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array32 = arraylist_b24.toArray(obj_array31);
    java.lang.Object[] obj_array33 = treeset_b12.toArray(obj_array32);
    java.lang.Boolean b34 = treeset_b12.first();
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35, b_array37);
    boolean b40 = treeset_b35.add((java.lang.Boolean)true);
    treeset_b35.clear();
    boolean b42 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35);
    boolean b43 = treeset_b0.equals((java.lang.Object)treeset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b34 + "' != '" + false+ "'", b34.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test344"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    boolean b29 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array32);
    boolean b35 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj39 = treeset_b30.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b30.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj42 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj42);
    java.lang.Boolean b45 = treeset_b43.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b46 = treeset_b43.descendingSet();
    boolean b47 = treeset_b30.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b46);
    java.lang.Boolean b49 = treeset_b30.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b52 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b53 = treeset_b0.equals((java.lang.Object)sortedset_b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test345"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Boolean b9 = treeset_b0.ceiling((java.lang.Boolean)true);
    int i10 = treeset_b0.size();
    java.lang.Object[] obj_array11 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + true+ "'", b9.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test346"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.lang.Boolean b9 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test347"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.Iterator<java.lang.Boolean> iterator_b18 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b0.descendingSet();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test348"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.lang.Boolean b5 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array8 = new java.lang.Boolean[] { false };
    boolean b9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b6, b_array8);
    java.util.Comparator<java.lang.Object> comparator_obj10 = treeset_b6.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b6.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b15 = treeset_b6.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b6.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b18 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18, b_array20);
    java.lang.Object[] obj_array25 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array26 = arraylist_b18.toArray(obj_array25);
    java.lang.Object[] obj_array27 = treeset_b6.toArray(obj_array26);
    java.lang.Object[] obj_array28 = treeset_b0.toArray(obj_array26);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    treeset_b34.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b39 = treeset_b34.descendingIterator();
    java.lang.Object obj40 = treeset_b34.clone();
    java.lang.Object[] obj_array41 = treeset_b34.toArray();
    java.lang.Object[] obj_array42 = treeset_b0.toArray(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test349"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.descendingIterator();
    int i11 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    boolean b17 = treeset_b12.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array18 = treeset_b12.toArray();
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b12.descendingSet();
    java.lang.Boolean b21 = treeset_b12.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test350"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.lang.Boolean b10 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    int i12 = treeset_b11.size();
    java.lang.Boolean b13 = treeset_b11.first();
    java.lang.Object obj14 = treeset_b11.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test351"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b0.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test352"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array10);
    boolean b13 = treeset_b8.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array14 = treeset_b8.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b15 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b15, b_array17);
    java.lang.Object[] obj_array22 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array23 = arraylist_b15.toArray(obj_array22);
    boolean b24 = treeset_b8.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b15);
    java.lang.Boolean b26 = treeset_b8.ceiling((java.lang.Boolean)false);
    boolean b27 = treeset_b8.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b8.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { false, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b29.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b36 = treeset_b29.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long37 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array40 = new java.lang.Long[] { (-1L), 0L };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long37, long_array40);
    boolean b42 = treeset_b29.retainAll((java.util.Collection<java.lang.Long>)arraylist_long37);
    boolean b43 = treeset_b8.removeAll((java.util.Collection<java.lang.Long>)arraylist_long37);
    boolean b44 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long37);
    java.lang.Boolean b45 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b36 + "' != '" + true+ "'", b36.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test353"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b0.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b12 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test354"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.descendingIterator();
    treeset_b0.clear();
    java.util.Comparator<java.lang.Object> comparator_obj7 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj7);
    java.lang.Boolean b10 = treeset_b8.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b8.descendingSet();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b8.headSet((java.lang.Boolean)true, false);
    boolean b15 = treeset_b0.equals((java.lang.Object)treeset_b8);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b8.headSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test355"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.lang.Boolean b21 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj22 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj22);
    java.lang.Boolean b25 = treeset_b23.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b23.descendingSet();
    java.lang.Object[] obj_array27 = treeset_b23.toArray();
    java.lang.Object[] obj_array28 = treeset_b0.toArray(obj_array27);
    java.lang.Object obj29 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj29);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test356"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.first();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.headSet((java.lang.Boolean)false, false);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array19);
    treeset_b17.clear();
    java.lang.String str22 = treeset_b17.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b17);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b17.headSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b31 = treeset_b17.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = treeset_b0.remove((java.lang.Object)navigableset_b31);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b31);

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test357"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array10 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array13);
    boolean b16 = treeset_b11.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array17 = treeset_b11.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b18 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18, b_array20);
    java.lang.Object[] obj_array25 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array26 = arraylist_b18.toArray(obj_array25);
    boolean b27 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b18);
    java.lang.Boolean b29 = treeset_b11.ceiling((java.lang.Boolean)false);
    boolean b30 = treeset_b11.isEmpty();
    java.lang.Boolean b32 = treeset_b11.higher((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj33 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj33);
    java.lang.Boolean b36 = treeset_b34.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b37 = treeset_b34.descendingSet();
    java.lang.Object[] obj_array38 = treeset_b34.toArray();
    java.lang.Object[] obj_array39 = treeset_b11.toArray(obj_array38);
    java.lang.Object[] obj_array40 = treeset_b0.toArray(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + true+ "'", b29.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test358"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    int i12 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test359"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.lang.Boolean b17 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b18 = treeset_b7.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test360"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    boolean b6 = treeset_b0.contains((java.lang.Object)(byte)100);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { false, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b10.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b10.comparator();
    treeset_b10.clear();
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false, true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array23);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b20.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b27 = treeset_b20.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long28 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array31 = new java.lang.Long[] { (-1L), 0L };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long28, long_array31);
    boolean b33 = treeset_b20.retainAll((java.util.Collection<java.lang.Long>)arraylist_long28);
    java.lang.String str34 = treeset_b20.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b20);
    // The following exception was thrown during execution in test generation
    try {
    boolean b36 = treeset_b10.remove((java.lang.Object)treeset_b20);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + true+ "'", b27.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[]"+ "'", str34.equals("[]"));

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test361"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b12 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b12, b_array14);
    java.lang.Object[] obj_array19 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array20 = arraylist_b12.toArray(obj_array19);
    java.lang.Object[] obj_array21 = treeset_b0.toArray(obj_array20);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array24);
    java.util.Comparator<java.lang.Object> comparator_obj26 = treeset_b22.comparator();
    java.lang.Boolean b28 = treeset_b22.lower((java.lang.Boolean)true);
    boolean b30 = treeset_b22.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b31 = treeset_b22.iterator();
    java.util.Comparator<java.lang.Object> comparator_obj32 = treeset_b22.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b35 = treeset_b22.headSet((java.lang.Boolean)true, false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b36 = treeset_b0.contains((java.lang.Object)treeset_b22);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + false+ "'", b28.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b35);

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test362"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test363"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    boolean b29 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b31 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b31);

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test364"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { false, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b8.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b8.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long16 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array19 = new java.lang.Long[] { (-1L), 0L };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long16, long_array19);
    boolean b21 = treeset_b8.retainAll((java.util.Collection<java.lang.Long>)arraylist_long16);
    java.lang.String str22 = treeset_b8.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b8);
    boolean b24 = treeset_b0.equals((java.lang.Object)treeset_b23);
    int i25 = treeset_b23.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test365"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.lang.Boolean b6 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array9);
    boolean b12 = treeset_b7.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array13 = treeset_b7.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b14.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b20);
    java.util.ArrayList<java.lang.Long> arraylist_long22 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array28 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long22, long_array28);
    boolean b30 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    boolean b31 = treeset_b7.retainAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    boolean b32 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long22);
    java.util.Iterator<java.lang.Boolean> iterator_b33 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b33);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test366"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array10);
    boolean b13 = treeset_b8.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array14 = treeset_b8.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b15 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b15, b_array17);
    java.lang.Object[] obj_array22 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array23 = arraylist_b15.toArray(obj_array22);
    boolean b24 = treeset_b8.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b15);
    java.lang.Boolean b26 = treeset_b8.ceiling((java.lang.Boolean)false);
    boolean b27 = treeset_b8.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b8.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { false, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b29.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b36 = treeset_b29.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long37 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array40 = new java.lang.Long[] { (-1L), 0L };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long37, long_array40);
    boolean b42 = treeset_b29.retainAll((java.util.Collection<java.lang.Long>)arraylist_long37);
    boolean b43 = treeset_b8.removeAll((java.util.Collection<java.lang.Long>)arraylist_long37);
    boolean b44 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long37);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { false, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b45.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b53 = treeset_b45.higher((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b54, b_array56);
    boolean b59 = treeset_b54.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array60 = treeset_b54.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b61 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array63 = new java.lang.Boolean[] { true };
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b61, b_array63);
    java.lang.Object[] obj_array68 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array69 = arraylist_b61.toArray(obj_array68);
    boolean b70 = treeset_b54.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b61);
    java.lang.Boolean b72 = treeset_b54.ceiling((java.lang.Boolean)false);
    java.lang.String str73 = treeset_b54.toString();
    java.lang.Boolean b75 = treeset_b54.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b76 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array78 = new java.lang.Boolean[] { true };
    boolean b79 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b76, b_array78);
    boolean b81 = treeset_b76.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b84 = treeset_b76.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long85 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array89 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b90 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long85, long_array89);
    boolean b91 = treeset_b76.removeAll((java.util.Collection<java.lang.Long>)arraylist_long85);
    boolean b92 = treeset_b54.retainAll((java.util.Collection<java.lang.Long>)arraylist_long85);
    boolean b93 = treeset_b45.retainAll((java.util.Collection<java.lang.Long>)arraylist_long85);
    boolean b94 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b36 + "' != '" + true+ "'", b36.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b72 + "' != '" + true+ "'", b72.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "[true]"+ "'", str73.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == false);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test367"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.lang.Boolean b21 = treeset_b0.higher((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b0.pollFirst();
    int i23 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array26);
    treeset_b24.clear();
    java.lang.String str29 = treeset_b24.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b24);
    int i31 = treeset_b30.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { true, true };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b32, b_array35);
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b32.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b38);
    boolean b41 = treeset_b39.remove((java.lang.Object)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b42.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b48);
    boolean b51 = treeset_b49.remove((java.lang.Object)false);
    java.lang.Boolean b53 = treeset_b49.lower((java.lang.Boolean)false);
    java.lang.Boolean b55 = treeset_b49.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b49.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b60 = treeset_b49.tailSet((java.lang.Boolean)false, false);
    java.util.ArrayList<java.lang.Long> arraylist_long61 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array67 = new java.lang.Long[] { 10L, 100L, (-1L), 10L, (-1L) };
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long61, long_array67);
    boolean b69 = treeset_b49.removeAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    boolean b70 = treeset_b39.removeAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    boolean b71 = treeset_b30.retainAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    boolean b72 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "[]"+ "'", str29.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test368"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b8 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b8);

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test369"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b21.comparator();
    java.lang.Boolean b27 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.floor((java.lang.Boolean)true);
    boolean b30 = treeset_b0.contains((java.lang.Object)b29);
    java.util.Comparator<java.lang.Object> comparator_obj31 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b32 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj31);
    java.util.SortedSet<java.lang.Boolean> sortedset_b34 = treeset_b32.tailSet((java.lang.Boolean)true);
    boolean b35 = treeset_b0.remove((java.lang.Object)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b38 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b0.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + false+ "'", b29.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test370"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b9 = treeset_b7.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b7.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    boolean b18 = treeset_b13.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array19 = treeset_b13.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b20 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b20, b_array22);
    java.lang.Object[] obj_array27 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array28 = arraylist_b20.toArray(obj_array27);
    boolean b29 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b20);
    java.lang.Boolean b31 = treeset_b13.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b34 = treeset_b13.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array38 = new java.lang.Boolean[] { true, true };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35, b_array38);
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b35.tailSet((java.lang.Boolean)false);
    boolean b42 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array45);
    treeset_b43.clear();
    java.lang.String str48 = treeset_b43.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b43);
    java.util.Iterator<java.lang.Boolean> iterator_b50 = treeset_b43.iterator();
    boolean b52 = treeset_b43.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true, true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53, b_array56);
    java.util.SortedSet<java.lang.Boolean> sortedset_b59 = treeset_b53.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b60 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b59);
    java.util.ArrayList<java.lang.Long> arraylist_long61 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array67 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long61, long_array67);
    boolean b69 = treeset_b60.removeAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    boolean b70 = treeset_b43.removeAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    boolean b71 = treeset_b35.retainAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    boolean b72 = treeset_b12.removeAll((java.util.Collection<java.lang.Long>)arraylist_long61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b31 + "' != '" + true+ "'", b31.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "[]"+ "'", str48.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test371"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Object obj10 = null;
    boolean b11 = treeset_b0.equals(obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test372"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b4 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array6 = new java.lang.Boolean[] { true };
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b4, b_array6);
    boolean b9 = treeset_b4.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array10 = treeset_b4.toArray();
    java.lang.Object[] obj_array11 = treeset_b1.toArray(obj_array10);
    java.lang.Object obj12 = null;
    boolean b13 = treeset_b1.equals(obj12);
    java.lang.Object obj14 = treeset_b1.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    java.util.Comparator<java.lang.Object> comparator_obj19 = treeset_b15.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b24 = treeset_b15.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b15.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array29);
    treeset_b27.clear();
    boolean b33 = treeset_b27.contains((java.lang.Object)(byte)100);
    boolean b34 = treeset_b15.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27);
    java.util.ArrayList<java.lang.Boolean> arraylist_b35 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b35, b_array37);
    java.lang.Object[] obj_array42 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array43 = arraylist_b35.toArray(obj_array42);
    java.lang.Object[] obj_array44 = treeset_b15.toArray(obj_array42);
    java.lang.Object[] obj_array45 = treeset_b1.toArray(obj_array42);
    java.util.Iterator<java.lang.Boolean> iterator_b46 = treeset_b1.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b49 = treeset_b1.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b49);

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test373"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj16 = treeset_b9.comparator();
    java.lang.Object obj17 = treeset_b9.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b24);
    java.util.ArrayList<java.lang.Long> arraylist_long26 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long26, long_array32);
    boolean b34 = treeset_b25.removeAll((java.util.Collection<java.lang.Long>)arraylist_long26);
    boolean b35 = treeset_b9.removeAll((java.util.Collection<java.lang.Long>)arraylist_long26);
    int i36 = treeset_b9.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    boolean b42 = treeset_b37.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b47 = treeset_b37.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj48 = treeset_b37.clone();
    java.lang.Boolean b50 = treeset_b37.floor((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b37.tailSet((java.lang.Boolean)true, false);
    boolean b54 = treeset_b9.remove((java.lang.Object)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b55 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array57 = new java.lang.Boolean[] { true };
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b55, b_array57);
    boolean b60 = treeset_b55.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array61 = treeset_b55.toArray();
    java.lang.Object[] obj_array62 = treeset_b9.toArray(obj_array61);
    java.lang.Object[] obj_array63 = treeset_b0.toArray(obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array63);

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test374"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    treeset_b12.clear();
    boolean b18 = treeset_b12.contains((java.lang.Object)(byte)100);
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.ArrayList<java.lang.Boolean> arraylist_b20 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b20, b_array22);
    java.lang.Object[] obj_array27 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array28 = arraylist_b20.toArray(obj_array27);
    java.lang.Object[] obj_array29 = treeset_b0.toArray(obj_array27);
    java.util.Iterator<java.lang.Boolean> iterator_b30 = treeset_b0.descendingIterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b32 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b32);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test375"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b47 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Object obj49 = treeset_b48.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj49);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test376"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b12 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b12, b_array14);
    java.lang.Object[] obj_array19 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array20 = arraylist_b12.toArray(obj_array19);
    java.lang.Object[] obj_array21 = treeset_b0.toArray(obj_array20);
    java.lang.Boolean b22 = treeset_b0.first();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array25);
    boolean b28 = treeset_b23.add((java.lang.Boolean)true);
    treeset_b23.clear();
    boolean b30 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array33);
    treeset_b31.clear();
    boolean b37 = treeset_b31.contains((java.lang.Object)(byte)100);
    treeset_b31.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b31);
    boolean b40 = treeset_b0.equals((java.lang.Object)treeset_b39);
    java.util.SortedSet<java.lang.Boolean> sortedset_b42 = treeset_b39.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b44 = treeset_b39.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b44);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test377"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    boolean b29 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b31 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b31 + "' != '" + true+ "'", b31.equals(true));

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test378"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b10.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b10.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array18 = treeset_b10.toArray();
    java.lang.Object[] obj_array19 = treeset_b9.toArray(obj_array18);
    java.lang.Boolean b20 = treeset_b9.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + false+ "'", b20.equals(false));

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test379"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    java.util.ArrayList<java.lang.Long> arraylist_long17 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array23 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long17, long_array23);
    boolean b25 = treeset_b16.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    boolean b26 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    int i27 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.headSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test380"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Boolean b10 = treeset_b0.pollFirst();
    java.util.Collection<java.lang.Object[]> collection_obj_array11 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b12 = treeset_b0.containsAll(collection_obj_array11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + true+ "'", b10.equals(true));

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test381"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test382"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b10 = treeset_b7.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + true+ "'", b10.equals(true));

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test383"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.descendingIterator();
    int i11 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    boolean b17 = treeset_b12.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array18 = treeset_b12.toArray();
    boolean b19 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b20 = treeset_b12.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + true+ "'", b20.equals(true));

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test384"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b13 = treeset_b12.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test385"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b5 = treeset_b0.descendingSet();
    java.lang.Boolean b6 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Object obj8 = null;
    boolean b9 = treeset_b7.equals(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test386"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    boolean b8 = treeset_b1.add((java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b1.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b1.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj20 = treeset_b13.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array23);
    boolean b26 = treeset_b21.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array27 = treeset_b21.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b28 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28, b_array30);
    java.lang.Object[] obj_array35 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array36 = arraylist_b28.toArray(obj_array35);
    boolean b37 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b28);
    java.lang.Boolean b39 = treeset_b21.ceiling((java.lang.Boolean)false);
    boolean b40 = treeset_b21.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b41 = treeset_b21.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { false, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b42.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b49 = treeset_b42.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long50 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array53 = new java.lang.Long[] { (-1L), 0L };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long50, long_array53);
    boolean b55 = treeset_b42.retainAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b56 = treeset_b21.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b57 = treeset_b13.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b58 = treeset_b1.contains((java.lang.Object)b57);
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array62 = new java.lang.Boolean[] { true, true };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59, b_array62);
    java.util.SortedSet<java.lang.Boolean> sortedset_b65 = treeset_b59.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b67 = treeset_b59.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b70 = treeset_b59.tailSet((java.lang.Boolean)true, false);
    int i71 = treeset_b59.size();
    treeset_b59.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b73 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array75 = new java.lang.Boolean[] { true };
    boolean b76 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b73, b_array75);
    boolean b78 = treeset_b73.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array79 = treeset_b73.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b80 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array83 = new java.lang.Boolean[] { true, true };
    boolean b84 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b80, b_array83);
    java.util.SortedSet<java.lang.Boolean> sortedset_b86 = treeset_b80.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b87 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b86);
    java.util.ArrayList<java.lang.Long> arraylist_long88 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array94 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b95 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long88, long_array94);
    boolean b96 = treeset_b87.removeAll((java.util.Collection<java.lang.Long>)arraylist_long88);
    boolean b97 = treeset_b73.retainAll((java.util.Collection<java.lang.Long>)arraylist_long88);
    boolean b98 = treeset_b59.retainAll((java.util.Collection<java.lang.Long>)arraylist_long88);
    boolean b99 = treeset_b1.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b67 + "' != '" + true+ "'", b67.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array94);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b98 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b99 == false);

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test387"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.Comparator<java.lang.Object> comparator_obj18 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj18);

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test388"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.String str8 = treeset_b0.toString();
    java.util.Iterator<java.lang.Boolean> iterator_b9 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[true]"+ "'", str8.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b9);

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test389"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.lang.Object obj21 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array24);
    boolean b27 = treeset_b22.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b22.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj31 = treeset_b22.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b33 = treeset_b22.headSet((java.lang.Boolean)true);
    boolean b34 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)sortedset_b33);
    java.lang.Boolean b36 = treeset_b0.higher((java.lang.Boolean)false);
    java.lang.Object obj37 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b36 + "' != '" + true+ "'", b36.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj37);

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test390"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { false };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array7);
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b5.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b5.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array13 = treeset_b5.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b5);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b14.iterator();
    boolean b16 = treeset_b0.equals((java.lang.Object)treeset_b14);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test391"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array7 = new java.lang.Boolean[] { false };
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array7);
    java.util.Comparator<java.lang.Object> comparator_obj9 = treeset_b5.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b5.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array13 = treeset_b5.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b5);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b14.iterator();
    boolean b16 = treeset_b0.equals((java.lang.Object)treeset_b14);
    java.lang.String str17 = treeset_b0.toString();
    java.lang.Boolean b19 = treeset_b0.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[]"+ "'", str17.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test392"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    int i7 = treeset_b6.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b6.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b13.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b19);
    boolean b22 = treeset_b20.remove((java.lang.Object)false);
    java.lang.Boolean b24 = treeset_b20.lower((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b20.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b20.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b31 = treeset_b20.tailSet((java.lang.Boolean)false, false);
    boolean b32 = treeset_b6.remove((java.lang.Object)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b35 = treeset_b6.tailSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b35);

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test393"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.descendingIterator();
    java.lang.Object obj6 = treeset_b0.clone();
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.util.Comparator<java.lang.Object> comparator_obj8 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj8);

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test394"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj7 = treeset_b0.comparator();
    java.lang.Object obj8 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    java.util.ArrayList<java.lang.Long> arraylist_long17 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array23 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long17, long_array23);
    boolean b25 = treeset_b16.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    boolean b26 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long17);
    int i27 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b31.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b38.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b44);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array52);
    boolean b54 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b31.retainAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b56 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    java.lang.Boolean b57 = treeset_b0.pollFirst();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b60 = treeset_b0.headSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b60);

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test395"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b7.last();
    java.lang.Object[] obj_array13 = treeset_b7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test396"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long9 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array13 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long9, long_array13);
    boolean b15 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long9);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, false);
    java.lang.Object obj21 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test397"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Object[] obj_array10 = treeset_b7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test398"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    java.lang.Object[] obj_array5 = treeset_b1.toArray();
    java.lang.Boolean b7 = treeset_b1.ceiling((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b1.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test399"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj29 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj29);

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test400"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    boolean b18 = treeset_b13.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array19 = treeset_b13.toArray();
    treeset_b13.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b28 = treeset_b21.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array32);
    boolean b34 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.lang.String str35 = treeset_b21.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b21);
    boolean b37 = treeset_b13.equals((java.lang.Object)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b38.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b44);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array52);
    boolean b54 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b56 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b58 = treeset_b0.equals((java.lang.Object)(short)1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[]"+ "'", str35.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test401"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Boolean b9 = treeset_b0.last();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b15 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test402"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Object[] obj_array8 = treeset_b0.toArray();
    java.util.Iterator<java.lang.Boolean> iterator_b9 = treeset_b0.iterator();
    boolean b11 = treeset_b0.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test403"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.tailSet((java.lang.Boolean)false, false);
    int i19 = treeset_b7.size();
    treeset_b7.clear();
    java.util.Comparator<java.lang.Object> comparator_obj21 = treeset_b7.comparator();
    java.lang.Object[] obj_array22 = treeset_b7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);

  }

  @Test
  public void test404() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test404"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.lang.Boolean b13 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b0.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    java.util.Comparator<java.lang.Object> comparator_obj19 = treeset_b15.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b15.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj21 = treeset_b15.comparator();
    int i22 = treeset_b15.size();
    boolean b23 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test405() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test405"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    boolean b20 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array26);
    boolean b29 = treeset_b24.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array30 = treeset_b24.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b31 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31, b_array33);
    java.lang.Object[] obj_array38 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array39 = arraylist_b31.toArray(obj_array38);
    boolean b40 = treeset_b24.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31);
    java.lang.Boolean b42 = treeset_b24.ceiling((java.lang.Boolean)false);
    boolean b43 = treeset_b24.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b24.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { false };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array47);
    java.util.Comparator<java.lang.Object> comparator_obj49 = treeset_b45.comparator();
    java.lang.Boolean b51 = treeset_b45.lower((java.lang.Boolean)true);
    java.lang.Boolean b53 = treeset_b45.floor((java.lang.Boolean)true);
    boolean b54 = treeset_b24.contains((java.lang.Object)b53);
    boolean b55 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24);
    java.util.TreeSet<java.lang.Boolean> treeset_b56 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b42 + "' != '" + true+ "'", b42.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + false+ "'", b51.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b53 + "' != '" + false+ "'", b53.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);

  }

  @Test
  public void test406() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test406"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Long> arraylist_long9 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array13 = new java.lang.Long[] { 0L, 0L, (-1L) };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long9, long_array13);
    boolean b15 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long9);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, false);
    boolean b22 = treeset_b0.add((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array25);
    java.lang.Boolean b28 = treeset_b23.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { false };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array31);
    java.util.Comparator<java.lang.Object> comparator_obj33 = treeset_b29.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b29.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b38 = treeset_b29.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b29.headSet((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b41 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b41, b_array43);
    java.lang.Object[] obj_array48 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array49 = arraylist_b41.toArray(obj_array48);
    java.lang.Object[] obj_array50 = treeset_b29.toArray(obj_array49);
    java.lang.Object[] obj_array51 = treeset_b23.toArray(obj_array49);
    java.lang.Object[] obj_array52 = treeset_b0.toArray(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);

  }

  @Test
  public void test407() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test407"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.lang.Boolean b6 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b6 + "' != '" + false+ "'", b6.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));

  }

  @Test
  public void test408() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test408"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.lang.Boolean b23 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);

  }

  @Test
  public void test409() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test409"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.pollLast();
    boolean b8 = treeset_b0.isEmpty();
    java.lang.Boolean b10 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);

  }

  @Test
  public void test410() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test410"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.tailSet((java.lang.Boolean)false, false);
    int i19 = treeset_b7.size();
    int i20 = treeset_b7.size();
    java.lang.String str21 = treeset_b7.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b22.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b28);
    boolean b31 = treeset_b29.remove((java.lang.Object)false);
    java.lang.Boolean b33 = treeset_b29.lower((java.lang.Boolean)false);
    java.lang.Boolean b35 = treeset_b29.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b29.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b40 = treeset_b29.tailSet((java.lang.Boolean)false, false);
    int i41 = treeset_b29.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { false };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array44);
    java.util.Comparator<java.lang.Object> comparator_obj46 = treeset_b42.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b49 = treeset_b42.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b51 = treeset_b42.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b42.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b53);
    boolean b55 = treeset_b29.addAll((java.util.Collection<java.lang.Boolean>)sortedset_b53);
    boolean b56 = treeset_b7.contains((java.lang.Object)b55);
    java.lang.Boolean b57 = treeset_b7.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[true]"+ "'", str21.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b57 + "' != '" + true+ "'", b57.equals(true));

  }

  @Test
  public void test411() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test411"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b15);
    boolean b18 = treeset_b16.remove((java.lang.Object)false);
    java.lang.Boolean b20 = treeset_b16.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj21 = treeset_b16.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array24);
    boolean b27 = treeset_b22.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b22.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj31 = treeset_b22.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b33 = treeset_b22.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj34 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj34);
    java.lang.Boolean b37 = treeset_b35.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b38 = treeset_b35.descendingSet();
    boolean b39 = treeset_b22.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b38);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    java.util.SortedSet<java.lang.Boolean> sortedset_b46 = treeset_b40.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b48 = treeset_b40.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b51 = treeset_b40.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj52 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj52);
    java.lang.Boolean b55 = treeset_b53.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b56 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array58 = new java.lang.Boolean[] { true };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b56, b_array58);
    boolean b61 = treeset_b56.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array62 = treeset_b56.toArray();
    java.lang.Object[] obj_array63 = treeset_b53.toArray(obj_array62);
    java.lang.Object[] obj_array64 = treeset_b40.toArray(obj_array62);
    java.lang.Object[] obj_array65 = treeset_b22.toArray(obj_array62);
    java.lang.Object[] obj_array66 = treeset_b16.toArray(obj_array65);
    java.lang.Object[] obj_array67 = treeset_b0.toArray(obj_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b48 + "' != '" + true+ "'", b48.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array67);

  }

  @Test
  public void test412() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test412"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b4 = treeset_b1.descendingSet();
    boolean b5 = treeset_b1.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b1.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b7.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b13);
    java.util.ArrayList<java.lang.Long> arraylist_long15 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array21 = new java.lang.Long[] { 10L, 0L, (-1L), 100L, 1L };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long15, long_array21);
    boolean b23 = treeset_b14.removeAll((java.util.Collection<java.lang.Long>)arraylist_long15);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array26);
    boolean b29 = treeset_b24.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array30 = treeset_b24.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b31 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31, b_array33);
    java.lang.Object[] obj_array38 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array39 = arraylist_b31.toArray(obj_array38);
    boolean b40 = treeset_b24.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b31);
    java.lang.Boolean b42 = treeset_b24.ceiling((java.lang.Boolean)false);
    boolean b43 = treeset_b24.isEmpty();
    java.lang.Boolean b45 = treeset_b24.higher((java.lang.Boolean)true);
    java.lang.Object[] obj_array46 = treeset_b24.toArray();
    java.lang.Object[] obj_array47 = treeset_b14.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b1.toArray(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b42 + "' != '" + true+ "'", b42.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);

  }

  @Test
  public void test413() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test413"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b9 = treeset_b0.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test414() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test414"); }


    java.util.Comparator<java.lang.Object> comparator_obj0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj0);
    java.lang.Boolean b3 = treeset_b1.floor((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj4 = treeset_b1.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b1);
    java.lang.Boolean b6 = treeset_b5.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array9);
    treeset_b7.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b7.descendingIterator();
    java.lang.Object obj13 = treeset_b7.clone();
    java.util.Comparator<java.lang.Object> comparator_obj14 = treeset_b7.comparator();
    java.lang.Boolean b15 = treeset_b7.pollFirst();
    boolean b16 = treeset_b5.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test415() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test415"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b19 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b20 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    int i26 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 1);

  }

  @Test
  public void test416() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test416"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.lang.String str5 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b6 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj11 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj11);
    java.lang.Boolean b14 = treeset_b12.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    boolean b20 = treeset_b15.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array21 = treeset_b15.toArray();
    java.lang.Object[] obj_array22 = treeset_b12.toArray(obj_array21);
    java.lang.Object[] obj_array23 = treeset_b0.toArray(obj_array22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b24 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]"+ "'", str5.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);

  }

  @Test
  public void test417() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test417"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array6 = treeset_b0.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b7 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { true };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7, b_array9);
    java.lang.Object[] obj_array14 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array15 = arraylist_b7.toArray(obj_array14);
    boolean b16 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b7);
    java.lang.Boolean b18 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.Comparator<java.lang.Object> comparator_obj22 = treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj22);

  }

  @Test
  public void test418() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test418"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false, false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b14.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b22 = treeset_b14.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b14.headSet((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b25 = treeset_b14.iterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = treeset_b7.remove((java.lang.Object)treeset_b14);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b25);

  }

  @Test
  public void test419() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test419"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { false, false };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b8 = treeset_b0.first();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);

  }

  @Test
  public void test420() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test420"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.lang.Boolean b16 = treeset_b7.pollLast();
    java.lang.Boolean b17 = treeset_b7.pollFirst();
    java.lang.Boolean b19 = treeset_b7.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);

  }

  @Test
  public void test421() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test421"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    boolean b21 = treeset_b16.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array22 = treeset_b16.toArray();
    java.util.ArrayList<java.lang.Boolean> arraylist_b23 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b23, b_array25);
    java.lang.Object[] obj_array30 = new java.lang.Object[] { 0.0f, (-1.0d), 0.0d };
    java.lang.Object[] obj_array31 = arraylist_b23.toArray(obj_array30);
    boolean b32 = treeset_b16.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b23);
    java.lang.Boolean b34 = treeset_b16.ceiling((java.lang.Boolean)false);
    boolean b35 = treeset_b16.isEmpty();
    boolean b36 = treeset_b16.isEmpty();
    boolean b37 = treeset_b0.remove((java.lang.Object)b36);
    java.util.Comparator<java.lang.Object> comparator_obj38 = treeset_b0.comparator();
    boolean b40 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b34 + "' != '" + true+ "'", b34.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);

  }

  @Test
  public void test422() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test422"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    boolean b6 = treeset_b0.contains((java.lang.Object)(byte)100);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    int i9 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);

  }

  @Test
  public void test423() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test423"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    boolean b18 = treeset_b13.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array19 = treeset_b13.toArray();
    treeset_b13.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { false, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b21.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b28 = treeset_b21.pollLast();
    java.util.ArrayList<java.lang.Long> arraylist_long29 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { (-1L), 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long29, long_array32);
    boolean b34 = treeset_b21.retainAll((java.util.Collection<java.lang.Long>)arraylist_long29);
    java.lang.String str35 = treeset_b21.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b21);
    boolean b37 = treeset_b13.equals((java.lang.Object)treeset_b36);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b38.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b44);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { (-1L), 0L, (-1L), 10L, 10L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array52);
    boolean b54 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b56 = treeset_b0.retainAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + true+ "'", b8.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[]"+ "'", str35.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);

  }

  @Test
  public void test424() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test424"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.Object obj14 = treeset_b0.clone();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array22);
    boolean b25 = treeset_b20.add((java.lang.Boolean)true);
    treeset_b20.clear();
    java.lang.Boolean b27 = treeset_b20.pollLast();
    boolean b28 = treeset_b20.isEmpty();
    java.lang.Boolean b30 = treeset_b20.lower((java.lang.Boolean)true);
    java.lang.Boolean b32 = treeset_b20.ceiling((java.lang.Boolean)true);
    java.lang.Object[] obj_array33 = treeset_b20.toArray();
    java.lang.Object[] obj_array34 = treeset_b0.toArray(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);

  }

  @Test
  public void test425() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test425"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { false };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array15);
    java.util.Comparator<java.lang.Object> comparator_obj17 = treeset_b13.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b13.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    boolean b22 = treeset_b13.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b13.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array27);
    treeset_b25.clear();
    boolean b31 = treeset_b25.contains((java.lang.Object)(byte)100);
    boolean b32 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25);
    boolean b33 = treeset_b7.contains((java.lang.Object)b32);
    boolean b35 = treeset_b7.add((java.lang.Boolean)true);
    java.lang.Boolean b37 = treeset_b7.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + true+ "'", b37.equals(true));

  }

  @Test
  public void test426() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test426"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj12 = treeset_b7.comparator();
    int i13 = treeset_b7.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);

  }

  @Test
  public void test427() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test427"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.Boolean b9 = treeset_b0.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b9);

  }

  @Test
  public void test428() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test428"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b6);
    boolean b9 = treeset_b7.remove((java.lang.Object)false);
    java.lang.Boolean b11 = treeset_b7.lower((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b7.lower((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.headSet((java.lang.Boolean)false);
    java.lang.Boolean b16 = treeset_b7.pollLast();
    java.lang.Boolean b17 = treeset_b7.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array20);
    treeset_b18.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b18.descendingIterator();
    java.lang.Object obj24 = treeset_b18.clone();
    java.util.Comparator<java.lang.Object> comparator_obj25 = treeset_b18.comparator();
    boolean b26 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test429() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test429"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b5 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.lang.Object obj9 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj12 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj12);
    java.lang.Boolean b15 = treeset_b13.floor((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.descendingSet();
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b16);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b18.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b18.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.tailSet((java.lang.Boolean)true, false);
    java.util.Comparator<java.lang.Object> comparator_obj30 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>(comparator_obj30);
    java.lang.Boolean b33 = treeset_b31.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array36);
    boolean b39 = treeset_b34.add((java.lang.Boolean)true);
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b31.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array40);
    java.lang.Object[] obj_array43 = treeset_b0.toArray(obj_array40);
    java.lang.Boolean b45 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);

  }

}
